ýëåêòðîííàÿ ïî÷òà 
è áåçîïàñíîñòü DNS
Ý
dns
Крис Касперски   
kk@sendmail.ru
Крис Касперски
kk@sendmail.ru
Электронная почта 
и безопасность DNS
С развитием коммуникационных средств появилась возмож
ность создания "виртуальных офисов", неотъемлемую часть
которых составляет электронная почта. Корпоративная
переписка представляет несомненный интерес для конку
рентов и возникает естественный вопрос: "а как обстоят
дела с безопасностью?".
Настоящая статья рассказывает о механизмах некоторых
атак, использующихся злоумышленниками для реализации
угроз перехвата почты, нарушения работоспособности ра
бочей станции получателя и проникновения в почтовый
ящик получателя. Возможность фальсификации адреса от
правителя ввиду своей тривиальности здесь не рассматри
вается.
Перехват почты
Алиса пытается отправить Бобу письмо. Его стремится похитить злоумы
шленник, называющий себя Евой. Техника, используемая Евой для перехвата, за
висит от взаимного расположения жертв и атакующего. Ниже будут рассмотрены
следующие комбинации:
а) Ева находится в одном сегменте локальной Ethernetсети либо с Алисой,
либо с Бобом, либо с их почтовым сервером;
б) Алиса и Боб находятся в одной локальной сети, доступной Еве через
Интернет;
в) Алиса, Боб и Ева находятся в различных подсетях, подключенных
к Интернет.
Крис Касперски 2
Перехват, основанный на широковещательной природе Ethernet (Ева
находится в одном сегменте локальной Ethernetсети либо с Алисой, либо
с Бобом, либо с их почтовым сервером). Уязвимость локальных Ethernetсетей
объясняется тем, что они функционирует по принципу множественного доступа
с обнаружением несущей (сокращенно CSMA/CD), все устройства взаимодействуют
в одной среде и передачу одного устройства принимают все остальные. Образно
такую схему можно уподобить телеконференции, даже если обратится к некому
конкретному лицу, это сообщение получит каждый подписчик конференции. Разу
меется, передача секретных данных по такому каналу невозможна, если, конечно,
предварительно не зашифровать их.
Любой клиент Ethernetсети может получить доступ ко всей информации, пе
редаваемой по данному сегменту. Пассивный характер атаки не позволяет выявить
ни факт перехвата конфиденциальной информации, ни (тем более) установить на
каком узле расположен атакующий.
Единственная проблема, стоящая перед Евой – как проникнуть в локальную
сеть, да еще и оказаться в одном сегменте с жертвой? Чаще всего атакующий нахо
дится вне локальной сети, в лучшем случае имея к ней доступ через Инетрнет.
Теоретически она может попробовать прорваться в здание компании, навешав
лапшу на оттопыренные уши охранника, незаметно присесть за работающий тер
минал и,.. впрочем, при грамотном охраннике у нее вряд ли у нее чтото получится.
Перехват почты, основанный на уязвимости почтового сервера (Алиса и Боб
находятся в одной локальной сети, доступной Еве через Интернет). Для атаки
почтового сервера Ева может использовать ошибки его реализации, например,
у некоторых из них в файле "/etc/aliases" присутствует строка приблизительного
следующего содержания: "decode: |/usr/bin/uudecode", автоматически запускающая
программу "uudecode", предназначенную для распаковки UUEсообщений.
Многие расшифровщики помещают раскодированный текст в файл, указан
ный в UUEзаголовке, допуская его перезапись без запроса подтверждения от
пользователя. Если почтовый сервер обладает наивысшими привилегиями (а так
часто и бывает), программа uudecode унаследует их при запуске, предоставляя
злоумышленнику возможность перезаписи любого файла в системе.
Например, Ева может внести в файл "/.forward" строку вида "\root, root@so
mehost.org, eva@hotmail.ru", организовав дублирование почты администратора на
свой собственный адрес.
Точно такую операцию можно проделать и со всеми остальными пользовате
лями системы. достаточно лишь изменить файлы ".forward", находящиеся в их до
машних каталогах. Поскольку, пользователи могут самостоятельно редактировать
свои конфигурационные файлы, администратор не может знать кто внес эти изме
нения легальный пользователь или злоумышленник.
Другая уязвимость заключается в возможности выполнить код на удаленном
сервере, используя неявную поддержку конвейера в полях "MAIL FROM" и "RCPT
TO" у некоторых реализаций почтового сервера..
Электронная почта и безопасность DNS
Крис Касперски 3
Порой даже сами разработчики не подозревают об этом, поскольку такая воз
можность не всегда очевидна. Например, команда "open" языка Perl может не толь
ко открывать файл, но и запускать его, если в имени присутствует символ "|", обоз
начающий вызов конвейера.
Попытки самостоятельной интерпретации передаваемых функции параметров
встречаются достаточно часто. Особенно они характерны для UNIXсистем, в кото
рых конвейер является популярным средством межпроцессорного взаимодействия.
Однако разработчики, использующие в свой программе библиотеки сторонних по
ставщиков, не всегда проверяют как поведет себя та или иная функция, обнаружив
символ конвейера, особенно если об этом ничего не написано в документации. По
хожая проблема возникает и при разработке совместных проектов – один разработ
чик не может знать всех тонкостей функционирования модулей другого разработчи
ка, а в результате такой нестыковки полученная программа может неявным образом
поддерживать конвейер!
Точно так многие почтовые серверы оказываются уязвимы перед тривиаль
ным срывом стека. Например, в феврале 2000 года, в SMTP сервере MMDF версии
2.44aB4, работающего под управлением SCOUNIX, обнаружилась ошибка пере
полнением буфера в полях "MAIL FROM" и "RPPT TO", позволяющая злоумы
шленнику выполнить любой код под привилегией root.
А несколькими месяцами ранее – в ноябре 1999 года, ошибка переполнения
была обнаружена в POP3\SMTP сервере ZetaMail версии 2.1. Пароль, передавае
мый командой "PASS", помещался в буфер фиксированного размера, и слишком
длинная строка вылезала за его границы.
В том же ноябре 1999 появилось сообщение о наличие аналогичной уязвимо
сти в версиях 3.2x SMTPшлюза Interscan VirusWall, работающего под управлением
Windows NT. На этот раз переполнение буфера происходило во время приветствия
сервера командой "HELO" (если это приветствие оказывалось через чур много
словным).
Примерно в то же самое время обнаружилась уязвимость IMAIL POP3серве
ра. Версии 5.07, 5.05 и 5.06 не контролировали длину имени пользователя, переда
ваемую командой "USER". Такую же участь разделил Avirt Mail Server (версии 3.3a,
3.5). Сообщение о возможности переполнении буфера командой "PASS" появилось
в начале ноября все того же 1999 года.
Универсальной защиты от ошибок реализации нет, все что можно посовето
вать администратору – оперативно устанавливать свежие "заплатки" и обновления.
На FireWall надеяться бессмысленно – в данной ситуации он не спасет, по
скольку допускает прием сообщений почтовым сервером, приходящих глобальной
сети. Если же это запретить, прием писем от нелокальных респондентов станет не
возможным, что в подавляющем большинстве случаев неприемлемо.
Перехват, основанный на уязвимости DNS серверов (Алиса, Боб и Ева
находятся в различных подсетях, подключенных к Интернет). Не все получате
ли находятся в рамках одной локальной сети, и в некоторых случаях приходится
связываться с ними через Интернет. Для установки соединения с удаленным узлом
необходимо знать его IP адрес, но в emailадресах обычно используются не IPад
реса, а доменные имена почтовых серверов абонентов. Для того, чтобы узнать
адрес узла по его доменному имени обычно обращаются к службе DNS – распре
деленной базе данных, чаще всего функционирующей на базе протокола UDP.
Электронная почта и безопасность DNS
Крис Касперски 4
Такой выбор объясняется тем, что протокол UDP работает без установки сое
динения, и, поэтому, имеет лучшую производительность по сравнению с TCP. Рас
платой за скорость становится отсутствие контроля успешности доставки пакетов,
невозможность определения подлинности отправителя, неспособность противо
стоять сбоям и выявлять дублирующиеся пакеты.
Узел, получивший UDP пакет, не может достоверно установить его истинного
отправителя, следовательно, у злоумышленника существует возможность послать
сообщение от чужого имении.
Для перехвата корреспонденции Еве достаточно послать серверу Алисы фаль
сифицированное послание, замаскированное под ответ настоящего DNSсервера.
Если тот не распознает обмана, он установит соединение не с почтовым ящиком
Боба, а с узлом, указанным Евой, и передаст ему сообщение.
Если Алиса пренебрегла шифровкой и послала сообщение в открытом виде,
Ева без труда сможет ознакомиться с его содержимым (но даже если письмо заши
фровано, Ева смогла досадить Алисе по крайней мере тем, что Боб не получил ее
послания и никогда теперь его не получит).
При оценке степени возможной угрозы необходимо учитывать, что для под
делки ответа DNS злоумышленник должен подобрать верное значение портаот
правителя и уникального идентификатора, присутствующего в ответе DNS.
Илья Медведовский [1] сообщает, что "начальное значение "порта отправите
ля" в UDPпакете ≥ 1023 и увеличивается с каждым переданным DNSзапросом",
а "значение идентификатора (ID) DNSзапроса устанавливается следующим образом.
В случае передачи DNSзапроса с хоста оно зависит от конкретного сетевого прило
жения, вырабатывающего DNSзапрос. Эксперименты показали, что если запрос по
сылается из оболочки командного интерпретатора (SHELL) операционных систем Li
nux и Windows 95 (например, ftp nic.funet.fi), то это значение всегда равняется единице.
Если же DNSзапрос передается из Netscape Navigator или его посылает непосред
ственно DNSсервер, то с каждым новым запросом сам браузер или сервер увеличива
ет значение идентификатора на единицу".
Во втором издании книги [2], выпушенной спустя два года, этот фрагмент не
претерпел никаких изменений, а, ситуация, тем временем, несколько измени
лась – в современных реализациях разработчики проявили тенденцию к генерации
непредсказуемых идентификаторов, предотвращающих возможность атаки. А порт
отправителя вовсе не всегда монотонно увеличивается от запроса к запросу, после
освобождения сокета тот же порт может использоваться повторно.
Впрочем, к радости Евы, в сети до сих пор остаются пользователи, пользую
щиеся устаревшим программным обеспечением, поэтому, у нее есть вполне реаль
ная возможность отгадать значения порта отправителя и идентификатора, но
достаточно ли этого для успешности атаки? Нет!
Ева должна не только правдоподобно фальсифицировать пакет, но и доста
вить его жертве раньше, чем та получит ответ от настоящего DNSсервера. Проще
всего этого добиться на какоето время блокировав DNSсервер Алисы, к примеру,
направив на него шквал DNSзапросов, обработка которых должна занять все сво
бодное время сервера или же попытаться "завесить" его какимнибудь другим спо
собом (а такие способы в арсенале злоумышленников наличествуют в изобилии –
не стоит даже на них и останавливаться).
Электронная почта и безопасность DNS
Крис Касперски 5
Таким образом, Ева должна знать не только адреса Алисы и Боба, но и адрес
DNSсервера отправителя. А вот это уже представляет определенную проблему!
В простейшем случае, когда Алиса использует DNSсервер, предоставленный про
вайдером, выяснить его адрес можно без труда: достаточно спросить об этом у про
вайдера, которого, в свою очередь, можно определить по IPадресу Алисы.
Сложнее атаковать корпоративного пользователя, использующего собствен
ный DNSсервер, для надежности закрытый извне FireWallом. Создать надежную
защиту, проникнуть сквозь которую Ева сможет разве что при помощи динамита,
теоретически вполне возможно. Первой головной болью атакующего станет опре
деление адреса DNSсервера (а точнее, DNSсерверов, поскольку их может быть
и больше одного). Сканирование IPадресов на предмет открытого 53 порта предот
вратимо тем же FireWallом, блокирующим прием пакетов с внешних IPадресов.
Впрочем, с этой проблемой атакующий может справится ("может" – следует
понимать двояко – т.е. может справиться, а может и не справиться) – любой Fi
reWall, не отягощенный искусственным интеллектом, действует по однажды зало
женной в него схеме, а тем временем появляются новые все более и более изощрен
ные алгоритмы сканирования, которые ему не такто просто распознать!
Однако если администратор сети внедрит множество фальшивых DNSсерве
ров, "слушающих" 53порт, но ничего сверх этого не делающих, "ослепленная" Ева
будет вынуждена либо уложить всех их до единого (при этом вовсе не будучи увере
на, что среди них присутствует и настоящий DNS), либо атаковать жертву каким
нибудь другим способом.
Даже если, Ева какимто образом обойдет FireWall, она столкнется с пробле
мой неизвестности точного времени отправки письма. Ведь не может же она беско
нечно долго забрасывать Алису пакетами, ибо такое поведение слишком быстро
обратит на себя внимание и демаскирует атакующего. Если Алиса отвечает Бобу
в абсолютно непредсказуемое время и у Евы нет никаких, даже косвенных зацепок,
позволяющих хотя бы приблизительно определить время пересылки письма, ей
придется изменить свою тактику и атаковать сам DNSсервер.
Такая возможность базируется на незащищенности взаимодействия DNS
серверов друг с другом. Для этой цели используется все тот же уязвимый протокол
UDP, не позволяющий установить подлинность отправителя. В общих чертах рабо
та типичного DNSсервера выглядит так: получив запрос клиента, сервер просма
тривает содержимое своего локального кэша и в случае отрицательного результата
перенаправляет запрос на DNSсервер более высокого уровня. Для ускорения ра
боты его ответ помещается в кэш и в дальнейшем необходимость прибегать к по
сторонней помощи отпадает.
Если Алиса ранее уже отправляла корреспонденцию Бобу, адрес узла получате
ля давнымдавно находится в кэш DNSсервера, и, на первый взгляд, у Евы нет ни
какой возможности подменить его своим. Но это предположение не совсем верно.
Ева может воздействовать на содержимое кэша штатными средствами: посы
лкой множеством разнородных запросов, атакующий рано или поздно вытеснит из
кэша все старые записи, в том числе и адрес узла Боба (при этом важно отметить
тот факт, что все запрошенные доменные имена должны существовать в природе,
отсутствовать в кэше, и, наконец, размер кэша не должен быть слишком велик,
иначе будет очень трудно, а то и невозможно, добиться его заполнения).
Электронная почта и безопасность DNS
Крис Касперски 6
На втором этапе атаки Ева самостоятельно пошлет DNSсерверу запрос,
содержащий имя узла получателя, и тут же обрушит на сервер шквал подложных
ответов. Если хотя бы один из них будет принят за подлинный, в кэш попадет
фальшивый адрес! Здесь, правда, присутствует одно допущение – молчаливо пред
полагается, что при каждом запросе DNSзапросе Алиса получает ответ от самого
DNSсервера. На практике же, по соображениям производительности, предыду
щие запросы могут кэшироваться как узлом самой Алисы, так и одним из проме
жуточных хостов, соединяющих ее с DNSсервером. Однако, старая информация
не может оставаться в кэше бесконечно долго, т.к. это привело бы к очевидным
проблемам, не позволяя отслеживать изменения адресов доменных имен (такое
хоть и редко, но происходит), поэтому, хранящиеся в кэше данные периодически
"освежаются". Определенными действиями Ева может ускорить развязку, однако,
возможно, этого и не потребуется, т.к. в большинстве случаев, интервал достовер
ности информации, содержащийся в кэше невелик, и если Ева не шибко спешит,
ей нет никакой нужны чтолибо предпринимать.
Можно ли оградить себя от таких атак? С клиентской стороны однозначно –
нет. Но вот администратор DNSсервера теоретически может коечто предпри
нять для повышения защищенности своих клиентов. Например, некоторые руко
водства по безопасности (не будем показывать пальцем) рекомендуют отказаться
от использования UDP протокола и перейти на TCP. Протокол TCP выгодно отли
чается тем, что работает с установкой соединения и позволяет идентифицировать
отправителей. Падение производительности компенсируется усиленной защищен
ностью. Однако…
Первой головной болью, с которой столкнется администратор при переходе
на TCP, окажется гробовое молчание документации, ничего не говорящей о том,
как такой трюк проделать (правда, есть куча прекрасной литературы по этой тема
тике). Например, в описании демона named, работающего под управлением Linux,
возможность выбора TCPпротокола не упоминается вообще! Но даже если адми
нистратор сумеет связаться с разработчиками и ценой бессонных ночей научит
свой сервер "разговаривать" на TCP, это не предотвратит угрозу атаки.
Вопервых, TCPпротокол вовсе не такой защищенный каким кажется. Не
которые программные реализации TCP/IP генерируют предсказуемые идентифи
каторы, позволяя злоумышленнику посылать пакеты от чужого имени. Именно это
обстоятельство использовал небезызвестный Кевин Митник в своей атаке против
Цутому Шимомуры (а сам Цутому помниться сказал "Проблема не в Кевине, пробле
ма в том, что большинство систем действительно плохо защищено; то, что делал
Митник, остается осуществимым и сейчас"). Впервые на эту уязвимость обратил
внимание еще Моррис – старший, опубликовав в февральском номере журнала
Bell Labs за 1985 году (за десятилетие до Митника!) подробный технический отчет,
посвященный указанной проблеме[3], но даже сегодня, спустя пятнадцать лет по
сле публикации, эта проблема остается актуальной.
Вовторых, популярные операционные системы содержат одну малоизвест
ную тонкость (о том, что не все из них умеют формировать TCPзапросы к DNS
приходится вообще молчать): посылая DNSзапрос, они не знают на каком имен
но протоколе работает сервер и предполагают, что по умолчанию выбран UDP (во
всяком случае, так себя ведут LINUX и Windows). Поэтому, в указанных случаях се
Электронная почта и безопасность DNS
Крис Касперски 7
анс обмена начинается с посылки UDPпакта. При нормальном ходе вещей сервер
может дать клиенту указание перейти на TCPпротокол, но если злоумышленник
сумеет послать жертве подложный ответ раньше, чем это успеет сделать настоящий
сервер, клиент окажется введенным в заблуждение со всеми вытекающими отсюда
последствиями.
Тем не менее, несмотря на указанную уязвимость DNS, реализовать такую
атаку на практике чрезвычайно затруднительно  слишком много препятствий при
дется преодолеть взломщику прежде, чем он достигнет цели. Но невысокая вероят
ность успешной атаки – еще не защищенность! В критических случаях для обеспе
чения собственной безопасности при соединении с узлом можно использовать его
IPадрес, а не доменное имя.
Если Алиса пошлет сообщение по адресу bob@123.456.789.1 никакие манипу
ляции с DNS сервером не позволят Еве перехватить такое письмо, поскольку,
в этом случае обращений к DNS не происходит! С неудобствами же запоминания
ряда бессмысленных цифр вполне можно смириться, особенно если вспомнить,
что популярные почтовые клиенты поддерживают адресные книги и автоматиче
ски подставляют адрес получателя по его имени.
Однако, такой подход не лишен недостатков. Вопервых, отправитель скорее
всего не знает IP адреса узла получателя и вынужден обращаться к DNS, чтобы это
узнать. А DNSсервер, как было показано выше, мог быть атакован Евой, навязав
ший ему ложный IP адрес доменного имени почтового сервера получателя.
Вовторых, с одним доменным именем может быть связано множество IPад
ресов. Это позволяет равномерно распределить нагрузку между несколькими серве
рами и значительно увеличивает надежность системы: если один из серверов отка
жет, обработку запросов продолжат все остальные. В принципе отправитель может
выбрать какойто один, понравившейся ему IPадрес, но это приведет к существен
ному снижению надежности связи, что в ряде случаев неприемлемо.
Таким образом, лучшее что можно предпринять – защититься FireWallом,
при необходимости перевести DNSсервер на TCP протокол, запретить DNSкли
енту принимать UDP пакеты, установить максимальный размер DNSкэша, пре
дотвращая возможность его переполнения, не использовать реализаций протокола
TCP/IP, генерирующих предсказуемые идентификаторы, и, при возможности, по
просить выполнить эти требования администратора DNSсервера более высокого
уровня.
Перехват, основанный на уязвимость транзитных узлов. В идеальном случае
сервер отправителя устанавливает прямое соединение с почтовым ящиком получа
теля и опускает в него конверт. Но такая схема не всегда соответствует реальной
действительности. Огромное количество ежесекундно обрабатываемой корреспон
денции заставило разбить процесс доставки сообщений на множество этапов и соз
дать специальные узкоспециализированные узлы, занимающиеся исключительно
транспортировкой почты от одного сервера к другому.
Такая схема позволила оптимизировать сетевой трафик, но породила целый
ряд проблем: письма стали теряться, "застревать", искажаться двойной перекоди
ровкой и т.д. В довершение ко всему многие промежуточные узлы слабо защищены
и представляют легкую мишень для взлома.
Электронная почта и безопасность DNS
Крис Касперски 8
Для связи друг с другом промежуточные узлы часто используют доменные
имена, поэтому у злоумышленника существует возможность перехватить поток
корреспонденции направленным штурмом ложных DNSответов на один из про
межуточных узлов.
Такая атака требует: а) знания маршрута письма; б) знания адреса DNSсерве
ра, которому промежуточный узел направляет запрос.
Выяснить маршрут письма можно несколькими способами. Если сервер Али
сы допускает отправку корреспонденции без аутентификации клиента (такие сер
вера, хотя и редко, но все же встречаются), Ева сможет соединиться с ним и послать
письмо сама себе. Все промежуточные узлы оставят свои адреса в его заголовке.
Не факт, что к Бобу корреспонденция ходит тем же самым путем, но адреса первых
одногодвух узлов обычно идентичны независимо от конечного получателя.
Если же эта операция не удастся (а она, скорее всего, и не удастся), Ева может
вступить в переписку с Алисой или любым другим пользователем, отправляющим
письма с ее сервера. Еве достаточно получить в свои руки хотя бы один конверт,
чтобы восстановить траекторию путешествия письма.
Адрес DNSсервера можно выяснить тривиальным сканированием. Боль
шинство крупных транзитных узлов имеют свои собственные DNSсервера, распо
ложенные с ними в одной и той же подсети. Конечно, администратор атакуемого
узла может поставить FireWall, препятствующий определению адреса его DNSсер
вера, однако, не все промежуточные узлы снабжены такой защитой.
Для обеспечения конфиденциальности переписки Алисе надлежит либо пол
ностью отказаться от транзитной пересылки, либо доверять ее только надежным
узлам. И то, и другое можно реализовать клиентскими средствами, не обращаясь за
помощью к администратору. Существуют специальные программы для, так назы
ваемой, директивной рассылки. Они не нуждаются в серверах исходящей почты
и при отправке сообщения устанавливают соединение непосредственно с почто
вым ящиком получателя. Если ни одной такой программки под рукой нет, на худой
конец сойдет и штатный почтовый клиент. Достаточно в поле адреса сервера исхо
дящей почты прописать адрес почтового ящика получателя сообщения.
Для переписки с одним лишь Бобом предложенная выше схема вполне прие
млема, но если Алиса переписывается с огромным количеством респондентов, воз
никают определенные сложности. Например, ящики некоторых получателей на
момент отправки сообщения могут не работать (или работать нестабильно) и по
пытки отправки корреспонденции придется бесконечно повторять вновь и вновь.
Как бы возложить эту задачу на чужие плечи и при этом не ухудшить безопасность
(вариант нанять секретаря здесь не рассматривается)?
Изучая спецификацию SMTP протокола, ведающего пересылкой корреспон
денции, можно обнаружить давно забытый рудимент, оставшихся (и практически
исчезнувший на сегодняшний день) с тех незапамятных времен, когда никакой ав
томатической маршрутизации еще не существовало, и траекторию путешествия
пакетов отправителю приходилась указывать самостоятельно.
В UNIXсистемах для этой цели использовался лес "бангов" – восклицатель
ных знаков, перечисляющих все промежуточные узлы один за другим. Разработ
чики SMTP протокола трансформировали банги в удобочитаемые запятые, отче
Электронная почта и безопасность DNS
Крис Касперски 9
го, полный email адрес получателя стал выглядеть приблизительно так: "<@one,
@two:Bob@mail.ru>", где "one" и "two" адреса промежуточных узлов, по цепочке
пересылающих почту друг другу. Если ни один промежуточный узел не указан,
серверотправитель самостоятельно определяет маршрут передачи сообщения.
Если прямое соединение между узлами one и two невозможно, письмо либо возвра
тится назад к отправителю, либо узел one передаст его через посредника, которого
выберет самостоятельно. Т. е. при условии соблюдения стандартов гарантируется,
что письмо посетит все перечисленные узлы в указанном порядке, но не факт, что
оно пройдет только через перечисленные узлы.
Правильный подбор узлов предполагает, что каждый узел надежно защищен
от посягательств злоумышленника, и обеспечивает непосредственную связь
с своим "соседом".
Если Алиса успешно справится с подбором транзитных серверов, ей останется
решить одну маленькую проблему, а именно: популярные почтовые клиенты отка
жутся принять такой адрес, считая его "неправильным". Выход из ситуации состоит
в использовании специализированных клиентов, которых нетрудно найти в сети (во
избежание обвинений в рекламе никакие конкретные ссылки не приводятся).
Нарушение работоспособности рабочей
станции получателя
Угроза раскрытия конфиденциальности переписки  не единственная пробле
ма. Ева может послать Алисе особое зловредное сообщение, которое в лучшем слу
чае испортит Алисе настроение, а в худшем похитит с ее компьютера секретную ин
формацию, или даже отформатирует жесткий диск.
В начале октября 2000 года некий злоумышленник, имени которого история
не сохранила, послал автору этой стати прелюбопытное письмо, которое по замы
слу Евы предназначалось для блокирования работы почтового клиента. В теле со
общения, переданного в HTML формате, присутствовал следующий тривиальный
Javaкод: "while (1) { alert ("Hello, Kris\nI love your!"); }".
При попытке просмотра письма на экране появлялся модальный диалог до
закрытия которого весь интерфейс почтового приложения блокировался. А по
скольку диалог выдавался в бесконечном цикле, закрыть его никакой возможно
сти не было (т.е. закрытьто возможность была, но он тут же появлялся вновь).
После перезагрузки (или снятия процесса по AltCtrlDel) и повторного запуска
почтового клиента все повторялось вновь. Суть заключалась в том, что для удале
ния письма было необходимо перейти в папку "Входящие", отчего в области
предварительного просмотра отображалось последнее полученное сообщение,
а вместе с ним запускался зловредный скрипт.
Впрочем, автор статьи ничуть не пострадал, поскольку из соображений безо
пасности держал Javaмашину выключенной, но живо представляет себе, что за
слово слетело бы с его губ, окажись Javaмашина по небрежности включенной.
Электронная почта и безопасность DNS
Крис Касперски 10
Через пару дней пришло другое сообщение, на этот раз открывающее в беско
нечном цикле множество окон размером миллион на миллион пикселей, что
в очень короткое время привело бы к зависанию Windows 9x, но установленная на
компьютере автора операционная система Windows NT такую атаку благополучно
пережила.
Подобные "атаки" вызывают ухмылку у профессионалов, но способны по
ставить в тупик новичков, не имеющих никакого представления о виртуальных
Javaмашинах и не знающих как выйти из такой ситуации. В результате – поте
рянное время, нервы, настроение и ворчание побеспокоенного администратора.
Но как бы не было велико его желание "вырубить у всех юзеров Яву напрочь",
такое решение не всегда допустимо, т.к. простор многих сайтов после этого ока
жется невозможен.
Подобные шутки противны, но не более того. Куда опаснее скрипты, похи
щающие секретные файлы с локального диска пользователя. Такие атаки стано
вятся возможны благодаря многочисленным ошибкам в браузерах и виртуальных
Javaмашинах. Даже последняя на момент написания статьи, пятая версия браузе
ра Internet Explorer, запущенная под управлением Windows 2000, остается небезо
пасной. Вызов windows.open() в сочетании с функцией location() позволяет вы
полнить Javaапплет в контексте локального документа, вследствие чего скрипт
злоумышленника получает доступ к его содержимому и может передать этот файл
в руки Евы.
Поддержка плавающих форм в Internet Explorer 5.01 (и в некоторых других
версиях) реализована с ошибкой. Событие "NavigateComplete2", извещающие о за
вершении переселения документа на новое местоположение, открывает Еве доступ
к этому документу, даже если он расположен на локальном диске клиента. Код,
приведенный ниже, демонстрирует чтение файла "C:\test.txt" выводя его содер
жимое в диалоговом окне:
<IFRAME ID="Z"></IFRAME> 
<SCRIPT for=Z event="NavigateComplete2(x)">
alert(x.document.body.innerText); 
</SCRIPT>
<SCRIPT>
Z.navigate("file://c:/test.txt");
</SCRIPT>
Но этим поток ошибок не заканчивается. Ева способна встроить в HTML
письмо файл помощи Windows, записанный в формате chm. Эти файлы могут со
держать команды вызова исполняемых файлов, причем последние не обязательно
должны находится на локальном диске жертвы, и вполне могут располагаться на
компьютере злоумышленника, ведь благодаря встроенной в Windows поддержке
CIFS (Common Internet File System) различия между локальными и удаленными фай
лами сглаживаются!
Опасность такой атаки заключается в том, что от Алисы не требуется выпол
нения никаких дополнительных действий – достаточно просмотреть содержимое
письма, и код Евы тут же получит управление. На фоне этой угрозы, нашумевший
вирус "I LOVE YOUR", и все прочие насекомые, требующие для своего запуска от
крытия прикрепленного к письму вложения, выглядят детской игрушкой.
Электронная почта и безопасность DNS
Крис Касперски 11
Недавно в Outlook Express 5.х была обнаружена серьезная ошибка, позволяю
щая слишком длинным полем заголовка письма, переполнить буфер и передать
управление на код злоумышленника еще на стадии получения письма с сервера,
т. е. задолго до того, как его успеют проверить все существующие антивирусы!
Нетрудно вообразить себе как это могло бы быть использовано расторопными
злоумышленниками (окажись они не такими ленивыми)! Впрочем, такая возмож
ность у них еще есть – ведь не все пользователи заботятся об обновлении своих
приложений и уязвимый Outlook Express 5.x до сих пор широко распространен.
В шутку можно сказать: письма, особенно присланные в HTMLформате,
лучше вообще не читать, а уж тем более, полученные в пятницу, приходящуюся на
тринадцатое число тринадцатого месяца.
Проникновение в почтовый ящик получателя
Еще одной целью атаки Евы может быть почтовый ящик получателя. Если
Ева сумеет какимто образом подобрать к нему пароль, она получит доступ ко всей,
хранящейся в нем корреспонденции. Первый залог безопасности Боба – жутко
длинный, бессмысленный, иррегулярный пароль, найти который лобовым перебо
ром Ева не сможет даже за всю оставшуюся жизнь. Выбирая такой пароль, Боб дол
жен учитывать, что многие почтовые службы поддерживают опцию "забыли па
роль?". В общих чертах суть ее состоит в следующем: регистрируясь в системе,
пользователь сообщает некоторую дополнительную информацию о себе, напри
мер, дату рожденья любимой крысы своей подруги. Если Боб нечаянно утеряет
пароль, он сможет ввести эту информацию и получить новый. Из самых общих со
ображений следует: контрольная информация должна быть столько же непредска
зуема, как и сам пароль, иначе это облегчит Еве проникновение в систему. Напри
мер, всевозможных дат в диапазоне между 1950 и 2000 годом существует немногим
более десяти тысяч и для их перебора Еве не потребуется много времени, поэтому
использование какойлибо даты в качестве контрольной информации неразумно!
Предположим, Боб правильно отнесся к выбору пароля и контрольной ин
формации. Может ли он теперь чувствовать себя в безопасности? Если используе
мая Бобом почтовая служба не содержит ошибок реализации, позволяющих Еве
получать доступ к содержимому чужих ящиков (вообщето системы без ошибок на
сегодняшний день большая редкость, если они вообще есть), то на первый взгляд
ему ничто не угрожает.
Между тем, протокол POP3, использующийся для доставки почты с сервера
на компьютер клиента, передает имя пользователя и пароль в открытом, незаши
фрованном виде. Еве достаточно перехватить сетевой трафик и извлечь соответ
ствующие пакеты. Широковещательная среда локальных сетей Ethernet позволит
осуществить эту операцию без труда, а межсегментную атаку Ева сможет реализо
вать "подмятием" DNS.
Электронная почта и безопасность DNS
Крис Касперски 12
Вообщето, в спецификации POP3 протокола можно обнаружить необяза
тельную для реализации команду "APOP", шифрующую пароль перед его отправкой
на сервер и не чувствительную к перехвату. Однако ее поддерживают не все почто
вые службы и не все почтовые клиенты. Выяснить, как обстоят дела в конкретно
взятом случае можно у администратора системы (например, популярный сервер
mail.ru поддерживает такой метод аутентификации пользователей).
Выводы
Проанализировав сложившуюся ситуацию, приходится констатировать: га
рантировать конфиденциальность электронной переписке на сегодняшний день
невозможно. Угроза исходит не только от спецслужб, наподобие СОРМ, но и про
стых Васей Пупкиных, вооруженных одним лишь модемом, простеньким персо
нальным компьютером и базовыми техническими знаниями. Все атаки, описанные
выше, не представляют никакого секрета и хорошо известны как специалистам по
безопасности, так и злоумышленникам. Отсутствие громких прецедентов, связан
ных с хищением почты, не дает повода надевать розовые очки. В отличие от укра
шения WEBстраничек своим graffiti, перехват корреспонденции происходит неза
метно, а жертвам невыгодно разглашать факт свершившейся атаки, особенно если
злоумышленникам удалось похитить действительно ценную информацию.
В идеальном случае следовало бы посоветовать отказаться от пересылки поч
ты на удаленные узлы Internet, а если такая операция неизбежна – обязательно ши
фровать содержимое послания такими утилитами, наподобие PGP.
Ни в коем случае не стоит экономить на специалистах и принимать админи
стратором человека без глубоких знаний устройства сети и должного опыта работы,
но и не стоит переоценивать возможности даже самого талантливого "гуру". Адми
нистратор – не бог и устранить уязвимости базовых протоколов и систем защиты
он не силах.
Строго говоря, любой протокол Internet, основанный на TCP/IP, принципи
ально уязвим для взлома, а переход на новые, защищенные протоколы, по некото
рым причинам затягивается и происходит не так быстро, как хотелось бы.
В то же время, необходимо отметить относительную малочисленность опи
санных выше атак в связи с трудностями их реализации. Так что, не стоит впадать
в панику несмотря на всю свою не безопасность Интернет  живет, работает и посте
пенно улучшает свою защищенность.
Электронная почта и безопасность DNS
Крис Касперски 13
Список литературы
1. И. Медведовский, П. Семьянов, В.Платонов "Атака через Internet" НПО
Мир и Семья СанктПетербург 1997
2. И. Медведовский, П. Семьянов, Д. Леонов "Атака на Internet" ДМК Москва
1999
3. Bell Labs Computer Science Technical Report #117, February 25, 1985
Крис Касперски, независимый эксперт по компьютерной безопасности
С автором можно связаться по адресу kk@sendmail.ru
Электронная почта и безопасность DNS
Крис Касперски 14
