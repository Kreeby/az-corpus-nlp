Исмаил Садыгов
Рамин Махмудзаде
Наида Исаева
Учебник для 8-го класса
общеобразовательной
школы
Утверждено приказом
Министерства
образования
Азербайджанской
Республики №311 от
05.03.2008
Утверждено 
Министерством образования 
Азербайджанской Республики 
Научный редактор: Расим Алигулиев, член-корреспондент НАНА, д.т.н., профессор
Рецензенты: Алекпер Алиев, д.т.н., профессор 
Хаят Ахундова, педагог школы №164 г.Баку
Фатьма Гаджиева, педагог школы №83 г.Баку
Перевод: Наиля Баннаева
Информатика – учебник для 8-го класса общеобразовательной школы. 
И.Дж. Садыгов, Р.А.Махмудзаде, Н.Р.Исаева. Баку, “Bakınəşr”, 2010, 128 стр.
ISBN-978-9952-430-06-8
©  Министерство образования Азербайджанской Республики, 2010
© “Bakınəşr”. “ТМ group”. 2010
ИНФОРМАЦИЯ. ДАННЫЕ. ЗНАНИЕ
Информация. Информатика изучает свойства информации. Информа ция –
это сведения, помогающие нам ориентироваться в мире, в котором мы живем,
поэтому она также необходима человеку, как воздух или вода. Ин формация – это
знания, получаемые нами посредством телевидения, радио, газет, книг. Карты и
произведения изобразительного искусства – это информация. Тысячи научных
произведений, отражающих основы су ществую щей цивилизации – это инфор -
мация. И то, что на писано в ваших учеб никах – тоже информация. 
Информатика
Информатика изучает технологии сбора, хранения, обработки, пред ставления и
передачи информации.
1.1.
1
ИНФОРМАЦИЯ
Данные. Человек извлекает информацию из данных. Данные можно соз давать
и уничтожать, тиражировать и перекомпоновывать. Сопоставляя дан ные, можно
выделять среди них схожие и различные. Данные можно хранить на различных
материальных носителях – бумаге, компакт-дисках, магнитных дисках, а значит, и
обрабатывать при помощи различных тех нических устройств.  
Человек преобразует данные в интересующую его информацию. Дру гими
словами, данные можно сравнить с набором букв, написанным ка ким-либо алфа -
витом, а информацию – с рассказом либо сообщением, которые имеют опре де -
ленный смысл. Человек извлекает информацию из фактов, оценивает ее, ана -
лизирует и на основе сделанных им аналити че ских выводов принимает решение.
Знание. Путем выполнения определенного действия или комплекса действий
информация может преобразовываться в знание. Знание – это информация из
общественного опыта, полученная экспериментальным путем и используемая для
решения различных задач. 
1. Что изучает информатика?
2. В чем различие между информацией и данными?
3. Что такое знание?
Данные. Информация. Знание
Значение этих терминов необходимо знать в точности, так как нюансы различия между
ними очень тонки.
1. Данные. Данные – это некое сообщение, причем совершенно несущественно, имеет ли
это сообщение смысл. Например, набор  символов «19091985»  или «VD51FGD» - это
данные.
2. Информация. Информация – это данные, имеющие определенный смысл. Так, строка
символов становится информацией, когда она что-то выражает. Скажем, строка
«19091989» может быть как кодом какого-то товара, так и чьей-либо датой рождения (19
сентября 1989 года). Она становится информацией тогда, когда вы определяете, чего она
касается.
3. Знание. Совершая над информацией определенные операции по соответствую щим
правилам, мы преобразуем ее в знание. Например, зная, что строка «19091989»
означает чью-либо дату рождения (19 сентября 1989 года), можно сделать вывод, что
данный человек достиг 18 лет и может участвовать в выборах. В данном случае,
применив правило: «Граждане, достигшие 18 лет, имеют право участвовать в выбо -
рах», мы преобразуем информацию в знание.
4
ПРИЕМ ИНФОРМАЦИИ.  
ОСНОВНЫЕ СВОЙСТВА ИНФОРМАЦИИ.
Окружающий нас мир полон образов, звуков, запахов, и каждый из них – это
источник информации. Всю эту информацию доносят до человека его органы
чувств. 
Человек обладает пятью органами чувств – органами зрения, слуха, обоняния,
вкуса и осязания. 
Получая  разнообразную  информацию, человек определяет для себя сте пень ее
полезности.
Информация – это часть окружающего нас мира, другими словами, она – его
объект. И поэтому, как любой объект, информация обладает опреде ленными свой -
ствами, отличающими ее от других объектов.
Объективность информации – это ее соответствие объективной дей стви -
тельности. Объективность крайне редко бывает абсолютной. Это объясняется тем,
что данные по природе своей всегда объективны, од на ко методы анализа и
обработки информации, как правило, субъек тивны. Например, “стоит жаркая
погода” – это субъективная инфор ма ция, а “температура воздуха равна 25°C” –
объективная информация. 
Полнота информации определяется количеством собранной инфор мации,
касающейся того или иного предмета или явления.
ОСНОВНЫЕ СВОЙСТВА ИНФОРМАЦИИ 
Объективность Полнота Достоверность Адекватность Актуальность Понятность
1.2.
1.  ИНФОРМАЦИЯ 5
Достоверность информации – это ее неискаженность. Информация может быть
искажена как преднамеренно, так и неумышленно. Она может быть  ложной, или не
полностью достоверной.  
Адекватность информации отражает степень соответствия образа, созда вае мого
с помощью этой информации, реальному объекту, процессу, явлению и т.п. Создавая
модель любого объекта, необходимо, чтобы эта модель была адек ват на объекту, то
есть как можно больше соответствовала объекту.
Актуальность информации отражает степень ее соответствия текущему мо мен ту
времени. Это особенно важно в сфере управления. Информация, ак туаль ная вчера,
сегодня может оказаться уже не актуальной.
Понятность информации предполагает изложение информации языком,
понятным  для ее получателя.
1. Перечислите свойства информации.
2. Приведите пример, раскрывающий суть каждого из призна ков ин фор -
мации.
3. Какими свойствами обладает информация, получаемая по сред ством
телевидения и радио?
4. Приведите примеры неактуальной информации.
СБОР, ОБРАБОТКА, ПЕРЕДАЧА, ПОИСК 
И ХРАНЕНИЕ ИНФОРМАЦИИ.
С глубокой древности люди задумывались над способами упрощения и
ускорения работы с информацией. Изобретение книгопечатания дало воз мож ность
быстрого распространения информации и упростило ее хранение. XIX столетие
ознаменовалось грандиозными переменами в сфере передачи ин формации:
сначала почтовые перевозки стали осуществляться при помощи новейших
транспортных средств, а затем были изобретены телеграф и телефон. В наши же
дни информацию можно мгновенно передать в любую точ ку мира. Сейчас
информацию хранят не только на бумаге, но и на маг нитной ленте, компакт-
дисках, в памяти компьютера.
По мере приобретения человеком жизненного опыта, то есть с увеличе нием
количества имеющейся у него информации, повышаются его способ ности к
анализу и принятию решений.
ВХОДНАЯ ИНФОРМАЦИЯ ВЫХОДНАЯ  ИНФОРМАЦИЯ ОБРАБОТКА
1.3.
6
Человек давно научился обрабатывать собранную информацию при помощи
технических устройств. Среди таких устройств особое место занимает компьютер,
который способен обрабатывать огромное количество информации за малое время.  
Без обмена информацией развитие человечества оказалось бы в принципе
невозможным. Одним из главнейших факторов развития человечества является
накопление информации, распространение полученных знаний между людьми и
передача этих знаний из поколения в поколение.    
Информация из информационного источника, проходя по каналу связи,
доставляется до приемника информации. Каждая из трех частей вышеука занной
схемы характеризуется собственными свойствами (параметрами), от которых
зависит качество передачи.
Но это упрощенная схема передачи информации. В действительности же
данный процесс выглядит так: 
Источник информации может представлять собой как живое существо, так и
техническое устройство. Из источника информация попадает в кодирующее
устройство, которое преобразует ее в удобную для передачи форму. С ко -
дирующими устройствами мы сталкиваемся ежедневно: это мик ро фон телефона,
лист бумаги и т.д. Пройдя по каналу связи, информация попадает в декодирующее
устройство, которое преобразует кодированную информацию в форму, понятную
для получателя. Чело веческий глаз и человеческое ухо – сложнейшие деко -
дирующие устройства. 
Информацию необходимо хранить в таком виде, чтобы ее можно было при
необходимости быстро и легко найти. До появления компьютеров этой цели
служили всевозможные картотеки и каталоги. 
Входная информация. Выходная информация
Входная информация – это информация, получаемая человеком или устройством.
Выходная информация – это информация, полученная в результате обработки ее
человеком или компьютером.   
ИСТОЧНИК
ИНФОРМАЦИИ
КОДИРУЮЩЕЕ
УСТРОЙСТВО
ДЕКОДИРУЮЩЕЕ
УСТРОЙСТВО
ПОЛУЧАТЕЛЬ
ИНФОРМАЦИИ
КАНАЛ
СВЯЗИ 
ИСТОЧНИК 
ИНФОРМАЦИИ
ПОЛУЧАТЕЛЬ
ИНФОРМАЦИИ
КАНАЛ СВЯЗИ 
1.  ИНФОРМАЦИЯ 7
По мере развития информационных технологий для хранения и поиска
информации преимущественно стали использовать компью теры.
При  хранении  информации применяются следующие способы ее защиты:
– безопасность здания, в котором хранится секретная информация;
– идентификация личности при доступе к секретной информации (па роль,
пропуск, отпечаток пальца, голос, подпись);
– ограничение доступа людей к информации в зависимости от их пол но -
мочий;
– использование проверенных каналов и устройств связи;
– криптографические преобразования информации при помощи шифров.
Криптография – это наука, занимающаяся методами кодирования и декоди -
рования информации.
1. Что понимается под обработкой информации?
2. Как называется информация, полученная в результате обработки?
3. Из каких этапов состоит процесс передачи информации?
4. Какие методы применяются для защиты информации?
8
ИСТОРИЯ ВЫЧИСЛИТЕЛЬНОЙ ТЕХНИКИ
Загибая пальцы  при подсчете чего-либо, или же  складывая числа при помощи
пальцев, мы используем пальцы в качестве простейшего компьютера. 
История развития компьютера берет свое начало именно со счета на пальцах и
продолжается в наши дни. На протяжении многих веков средства для счета
оставались довольно простыми и не имели существенных преимуществ перед
счетом на пальцах. 
Несмотря на то, что  пальцы удобны для простых
вычислений, они неприменимы для проведения вы -
числений с  большими числами. Кроме пальцев, пер во -
бытный человек использовал для счета мелкие камеш -
2.1.
Латинское слово «digitus»,
означающее «палец», вовсе не
случайно приобрело в
английском языке новое
значение: «digit» означает
«цифра».
2
ИСТОРИЯ
ВЫЧИСЛИТЕЛЬНОЙ
ТЕХНИКИ
ки. К примеру, пересчитывая принадлежащее ему поголовье скота, он заменял
каждое животное камешком, и в конце под сче тов мог по общему количеству
камешков определить поголовье скота. Но если скота было уж очень много, это
затрудняло подсчеты. В этом случае человек начинал складывать из камешков
небольшие пирамиды.      
Но сколько камешков должно было быть в каждой пирамиде, чтобы было
удобно вести вычисления? Первобытный человек пришел к выводу, что по сколь ку
у него на обеих руках 10 пальцев, то и в каждой пирамиде для удобства подсчета
должно быть по 10 камешков.  
Предположим, что при таком способе вычислений у первобытного че ло века
получилось три пирамиды, по 10 камешков в каждой, и еще 4 отдельных камешка.
В этом случае он говорил: 
“У меня есть три по десять да еще четыре животных”. 
При таком способе подсчета даже для относительно небольших чисел 
(на при мер, “34”) приходилось использовать много камешков, для работы 
же с большими числами подобный принцип применения камешков и вовсе 
не годился.
Следующим шагом являлось изображение каждого десятка голов скота од ним
камешком другого цвета. Первобытный человек вполне мог обозначать единицы
черными камешками, а десятки – белыми. В этом случае  для изо бражения числа
“34” потребовалось бы всего 7 камешков: 3 белых и 4 чер ных.
Этот способ годился для работы и с гораздо  большими  числами – если
обозначить сотни, скажем, красными камешками.  
10
В этом случае для того, чтобы изобразить, например, число “154”, по тре бо ва лось бы
всего 10 камешков. 
Первые инструменты счета. У простых способов счета  были свои недо -
статки – с теми же камешками, например, работать было неудобно. Оче ред ной идеей
стало использование  разноцветных бусинок, нанизанных на про волоку. Этот
инструмент счета стали применять в Китае примерно с 1200 года до нашей эры.
Бусинки перемещались по проволокам, закреплен ным на дере вян ной раме. Бусинки
на первой проволоке означали единицы, на второй – десятки, на третьей – сотни, и
т.д. Перемещая бусинки по проволоке, можно было скла дывать и вычитать числа.
Это приспособление называлось абак.
Долгое время люди производили вычисления при помощи счетов. Счеты,
использовавшиеся вплоть до середины XX века, ведут свое происхождение от
абака. Однако сложение и вычитание больших чисел на счетах требует достаточно
много  времени.
Механические машины. В начале XVII века математика заняла лиди рую щее
положение среди прочих наук. Физики и астрономы этого времени столк нулись с
необходимостью проведения долгих и слож ных математических расче тов. Возникла
а)                                                                           б)
Первые вычислительные средства 
а) узелки на веревках  служили для запоминания;  б) абак.
2.  ИСТОРИЯ ВЫЧИСЛИТЕЛЬНОЙ ТЕХНИКИ 11
по требность в более совершен ных ин стру ментах, спо -
собных проводить подобные расчеты за короткое время.
Основным недостатком абака (счетов) было то, что
перевод единиц из одного разряда в другой осу -
ществлялся вручную. Механизировать этот процесс на
уровне камешков (косточек) было невозможно, следо -
вательно, необходимо было создать механизм, обла да -
ющий возможностью работы с  10-ю положе ниями (со -
сто яниями), соответствующими 10 цифрам. Эту идею
впервые воплотил в жизнь гениальный фран цузский
математик Блез Паскаль, когда ему было всего 19 лет.
После долгих поисков он изобрел до вольно сложное
для той эпохи устройство из 10 зуб чатых колес. Зубцы
на каждом были пронуме ро ваны от “0” до “9”. Каждый
поворот колеса на один зубец обозначал увеличение
обозначаемого им раз ря да на единицу. При совер -
шении первым из колес полного оборота (до цифры “9”
включительно) специальный механизм авто матически
передвигал второе колесо на один зубец. При полном
повороте второго колеса авто матически передвигалось
на один зубец третье колесо, и т.д. Говоря современ ным
языком, Паскаль изобрел многоразрядный ме ха ни -
ческий счетчик (принцип его и поныне исполь зу ет ся в
автомобильных спидометрах, электри ческих счетчиках
и т.д.).
Паскаль более десяти лет совершенствовал свою
машину. Он изготовил 50 ее экземпляров – из лату ни,
слоновой кости и других материалов. Из них до наших
дней дошли только восемь. Однако “Паска ли на” (так
была названо эта машина) не получила широкого
применения. Во-первых, она была довольно дорогой, а
во-вторых, что гораздо важнее, она предусматривала
сложение и вычитание только 6-10 разрядных чисел.
Что же касается таких слож ных операций, как
умножение и деление, то они тогда вообще не были
механизированы – этого события пришлось ждать еще
полвека.    
Арифмометр. Умножение многозначных чисел
представляет собой, по сути, многократное сложе ние.
Производя на бумаге умножение “в столбик”, мы
именно так и поступаем. При вычислении по такому
алгоритму на машине Паскаля один и тот же мно жи -
12
Блез Паскаль
(1623-1663)
Изобрел первое счетное
устрой ство. Видя, как отец –
сборщик налогов – день-
деньской ведет утомитель -
ные подсчеты, он решил
изобрести счетное приспо -
соб ле ние. 
В 1962 году, в возрасте все го
19 лет, Паскаль создал и
представил общественности
первую механическую вы -
чис ли тельную машину –
«Паскалину».
Паскалина
тель пришлось бы вводить несколько раз (к примеру, 6
раз). Периодически этот множитель надо было бы
сдвигать на разряд влево, что, конечно же,  довольно
утомительно.
В 1673 году видный немецкий математик, фило соф,
дипломат Готфрид Лейбниц предложил очень ори -
гинальное решение этой проблемы. Он внес в
устройство вычислительной машины два принципи -
альных усовершенствования. 
Во-первых, для повторного введения одних и тех же
чисел он применил ступенчатый валик (по сту пеньке
для каждого уровня) и поворотный рычаг. При
повороте рычага на один оборот, в зависи мости от
положения промежуточной шестерни, вал сдвигался на
заданную долю оборота.
Во-вторых, он разместил механизм ввода чисел на
подвижной каретке, так что при каждом оче редном
этапе умножения каретка сдвигалась на разряд влево от
счетного механизма. (В последую щих конструкциях
арифмометров оказалось удоб нее установить механизм
ввода на неподвижной части, а счетный механизм –
наоборот, на каретке, поэтому она стала двигаться
вправо).
Таким образом, стало возможным, введя множи -
тель единожды, многократно вводить его, путем
сдвига, в счетное устройство и в итоге осуществлять
операцию умножения. Аналогичным способом, вновь и
вновь извлекая (вычитая) делитель из дели мого, можно
было осуществлять операцию деления. Для этого рычаг
устройства нужно было вращать в противоположную
сторону.
Аналитическая машина Бэббиджа. С точки
зрения развития вычислительной техники XVIII век не
был насыщен событиями, зато начало XIX века
ознаменовалось многими крупными техническими изо -
бре тениями. В 1804 году французский механик Жо зеф-
Мари Жаккар (1752 - 1834), изобрел станок, который
автоматически, без участия человека, ткал узорчатые
ткани. Станок управлялся программным ме ханизмом на
перфокартах. Станок Жаккара про из вел революцию в
технике, ибо воплощал новый технологический
принцип – принцип программного управления. Вскоре
2.  ИСТОРИЯ ВЫЧИСЛИТЕЛЬНОЙ ТЕХНИКИ 13
Готфрид Лейбниц
(1646-1716)
В 1672 году Лейбниц, буду чи в
Париже, познакомил ся с гол -
ландским матема ти ком и ас -
трономом Хрис тиа ном Гюй -
генсом. На блю дая, сколь ко
вычисле ний прихо дит ся де лать
астроному, Лейб ниц при шел к
выводу о необ хо ди мости
изобретения механи че ского
устройства для об лег чения этой
работы.
Лейбниц писал: «Это не дос -
тойно таких замеча тель ных
людей – подобно рабам, те -
рять время на вычисли тель -
ную работу, которую мож но
было бы доверить кому угод но
при использовании машины».
сдвиг
сдвиг
14
появились и другие программно-управляемые автоматы. Известный английский
ученый и изобретатель Чарльз Бэббидж (1791-1871) впервые выдвинул идею
применить данный принцип к вычислительному устройству. 
Круг научных интересов Бэббиджа был очень широк: он опубликовал
множество научных статей по математике, физике, астрономии, геологии,
экономике, языкознанию. Он был автором не только научных работ, но и ряда
изобретений. Более 50 лет  своей жизни Бэббидж посвятил конструированию
вычисли тель ных машин.
В 1822 году он приступил к
созданию устройства, именуемо го
Разностной машиной (Diffe ren ce
engine) и предназначенного для
автоматического составле ния сло -
ж ных математических таблиц. По -
сле 12 лет работы над этим про -
ектом Бэббидж отка зался от него и
начал работу над Анали тической
машиной (Ana lyti cal engine). Новая
машина долж на была быть более
слож ной и решать разнообразные
задачи. Введение команд и данных
предполагалось осуществлять с
помощью перфо карт. Воплощению
в жизнь этой своей мечты Бэббидж
посвятил всю свою оставшуюся
жизнь, однако так и не достиг
успеха, потому  что его идеи опередили свое время примерно на сто лет.
Технологии его эпохи не позволяли создать подобную машину.
Внешний вид разностной машины
Чарльз Бэббидж 
(1791-1871) 
Современница Бэббиджа Ада Лавлейс была одним
из тех людей, кто оценил значение ана ли тической
машины. Ее зачастую называют пер вым про грам -
мистом в мире. Некоторые прие мы ее теоре -
тических разработок по управле нию после дова -
тельностью вычислений и по ныне используются
в программировании. На пример, она дала
описание команд, обеспечи вающих повторя -
емость последовательностей опре деленных дей -
ст вий. В современном  про граммировании подоб -
ная конструкция назы вается циклом.
В честь Ады Лавлейс один из языков програм -
мирования был назван «Ада».
Ада Лавлейс  
(1815–1852)
1. Что представляли из себя первые  вычислительные средства?
2. Кто изобрел первую механическую вычислительную машину?
3. Какие математические операции можно было осуществлять при
помощи вычислительной машины Лейбница?
4. Почему Бэббидж так и не смог закончить работу над созданием своей
Аналитической машины?
5. В честь кого из людей, перечисленных в данном параграфе, был наз -
ван один из языков программирования?
Перфокарта. Долгое  время  перфорированные (пробитые) карты, или перфокарты, были
основным  средством ввода данных в компьютер. Внешний вид перфокарт практически не
изменился с того момента, когда в 1890 году Герман Холлерит (1860 - 1929) применил их в
табуляторе для анализа результатов переписи населения США. Последние перфокарты весьма
напоминали те, что выпустила в оборот  компания IBM в 1928 году. Верхний левый угол их был
слегка срезан, чтобы не возникало путаницы при складывании в колоду.
Перфокарта с 80 колонками
Цифры, буквы и прочие символы представляются в соответствии с кодом, предло жен ным
Г.Холлеритом, каждая в одной из  80 колонок. Цифры кодируются одной пробивкой в нижней
строчке, буквы – двумя пробивками (одна – на так называемой « цифровой строчке», вторая – на
так называемой «зонной строчке»). Прочие символы кодируются двумя и более пробивками в
других строчках.
2.  ИСТОРИЯ ВЫЧИСЛИТЕЛЬНОЙ ТЕХНИКИ 15
Первый компьютер – ENIAC
ПОКОЛЕНИЯ КОМПЬЮТЕРОВ
Появление электронно-вычислительных машин стало возможным в результате
двух важных событий:
1. Были придуманы  способы  представления  информации – чисел и слов
– в двоичной форме. Каждое число или слово изображалось в виде
последовательности единиц и нулей.  
2. Были изобретены электронные устройства, позволяющие запо ми нать
числа и слова в двоичной форме.
Последующее развитие компьютеров было связано, в первую очередь, именно c
прогрессом в электронике. В результате этого развития появился тер мин “по ко -
ление компьютеров”. Каждое новое поколение отличается от пре ды дущего
изменением элементной базы и расширением (в той или иной степени) класса
решаемых задач. На практике же ощутимым различием в элементных базах
2.2.
16
(радиолампы, транзисторы, интегральные схемы) отли чают ся лишь первые три
поколения. В дальнейшем развитие элементных баз свелось к уменьшению раз ме -
ров интегральных схем и повышению степени интеграции.
Первым компьютером стал созданный в 1946 году в США ENIAC (Electro ni cal
Numerical Integrator and Calculator – Электронно-цифровой интегратор и
вычислитель). Схемы этого компьютера были созданы на основе  электрон ных
ламп. ENIAC был создан по заказу армии США в исследовательской ла бо ратории
баллистики для расчета артиллерийских таблиц, но при пере прог раммировании
был способен решать самые разные задачи и поэтому стал первым
широкомасштабным электронно-вычислительным компью те ром. Его архитектура
была разработана в 1943 году учеными Пенсильван ского университета Джоном
Преспером Эккертом и Джоном Уильямом Мочли.
Основой компонентной базы ENIAC были вакуумные лампы. В общей
сложности в нем было 17468 ламп, 7200 кремниевых диодов, 1500 реле, 70000
резисторов и 10000 конденсаторов. ENIAC потреблял 150 кВт электроэнер гии.
Расчеты производились в десятичной системе: за секунду он мог производить 300
операций умножения или 5000 операций сложения. Вес ENIAC составлял 30 тонн.
Занимала эта машина около 167 кв.м.
Первое поколение компьютеров. Компьютеры первого
поколения называют электронно-вычислительными маши нами
(ЭВМ). К ним относятся ламповые ЭВМ, создан ные в бывшем СССР
после появления первого предста вителя это го поколения – ENIAC. В
1950 году была сдана в экс плуатацию МЭСМ (Малая электронно-
вычислительная маши на).
ЭВМ этого поколения отличались крупными габаритами,
высоким потреблением электроэнергии, сложностью в управ лении и
ненадежностью. Они использовались до начала 60-х гг. XX века.
Второе поколение компьютеров. В 1947 го ду
группа американских физиков под руководством
Уилья ма Шокли разработала полупроводниковый элемент, наз -
ван ный транзистором. Транзистор многократно превос хо дил
ламповый триод по надежности, а электроэнергии по треб лял во
много раз меньше него.   
Транзисторы легли в основу элементной базы компьютеров
второго поколения. Один транзистор заменял собой 40 электронных ламп, он
работал быстрее, был более дешевым и надежным по сравнению с лампами.
Производство компьютеров второго поколения продолжалось с 1957-го года до
конца 60-х гг.
Третье поколение компьютеров. В 1959 году Джек Килби (1923–2005),
сотрудник компании “Texas Instruments” (США), предложил объединить несколько
транзисторов, конденсаторов и резисторов на полупроводниковой микросхеме. Так
была создана интегральная микросхема.
2.  ИСТОРИЯ ВЫЧИСЛИТЕЛЬНОЙ ТЕХНИКИ 17
Начиная с 1964 года интегральные микросхемы стали основой элементной базы
компьютеров третьего поколения. Это помогло снизить цену на ком пью те ры, и их,
наконец, смогли приобретать высшие и специальные учебные заведения.
Четвертое поколение компьютеров. С развитием технологии произ вод -
ства микросхем количество элементов, размещаемых на них, неуклонно росло. В
1970 году на одной микросхеме уже размещалось более 100 тран зисторов. С того
времени интегральные схемы стали подразделяться на ма лые, средние, большие и
т.д. В наши дни на микросхемах содержатся  несколь ко миллионов элементов.
С появлением в 70-х годах ХХ столетия компьютеров на больших ин теграль ных
схемах, стало возможным говорить об их  четвертом поколении. В результате
высокого уровня интеграции размеры компьютеров уменьшились настолько, что
машины четвертого поколения часто именуют микрокомпью терами. Цены на них к
тому времени снизились настолько, что компьютеры смогли приобретать некоторые
отделы и лаборатории учреждений.
Переход на сверхбольшие интегральные схемы позволил настолько умень шить
габариты компьютеров, что ими стало возможным оснащать отдельные ра бочие места.
Именно тогда возник новый термин – “персональный компьютер”.
В 1974 году был создан компьютер “Альтаир 8800”, а в 1977 году появился
компьютер “Apple II”  компании “Apple Computer” – прообраз современного муль -
18
ти медийного компьютера. С этого и нача лась эра
персональных компьютеров.
С тех пор персональные компьютеры  сами
изме нились настолько, что можно выделить
несколько поколений их собственных моделей. С
этой точки зрения мы сейчас находимся на этапе
перехода от седьмого к восьмому поколе нию
персональных компьютеров.
Пятое поколение компьютеров. В 1980-е
годы в Японии была принята правительствен ная
программа по развитию компьютерной отрас ли и
искусственного интеллекта. Было объяв лено, что
компьютеры пятого поколения – это компьютеры
будущего. Они будут обла дать искусственным
интел лектом. Эти компью теры будут понимать
естественный язык людей, воспринимать и обрабатывать информацию из
рукописных и печатных текстов, определять поль зо вателя по голосу.
Компьютер пятого поколения – PIM/m-1
2.  ИСТОРИЯ ВЫЧИСЛИТЕЛЬНОЙ ТЕХНИКИ 19
В XIX веке английский педагог
Уильям Шенкс потратил 28 лет
на то, чтобы вычислить 707 цифр
после запя той, ис пользуемого в
геометрии числа π («пи»). Со вре -
менная програм ма для ком пью -
тера способна вы чис лить это
значение за нес коль ко секунд.
При первом же рассчете по про -
грамме уже на 528-й деся тич ной
цифре бы ла обнаружена ошиб ка в
вычис лениях Шенкса.
Компьютеры пятого поколения будут обрабатывать не данные, а знания. За 10 лет
на разработки было истрачено огромное количество денег, но программа за вер -
шилась, не достигнув цели. Появление Интернета сделало многие идеи проекта
уста ревшими.
Несмотря на провал заявленного проекта компьютера пятого поколения,  в
различных странах мира (Японии, США и др.) ведутся исследования по отдельным
направлениям этого проекта. На данный момент уже созданы интеллектуальные
системы, идентифицирующие человеческий голос. 
В наши дни созданы суперкомпьютеры. Вычисления в них ведутся парал лельно,
поэтому скорость их работы намного превышает скорость обычных ком пью теров.
Например, в суперкомпьютере “Columbia” (США) параллель но рабо тают 10240 про -
цессоров. Если для проведения вычислений одного экс перимента этому компьютеру
потребуется 80 часов, то обычному ком пьютеру – 18 лет.
Суперкомпьютеры применяются во многих сферах:
– для раскрытия генетического кода человеческого организма;
– для изучения атмосферных явлений и изменений климата;
– для прогнозирования стихийных бедствий (землетрясений, навод нений);
– в военных целях;
– в атомной и молекулярной физике;
– в космических исследованиях и т.д.
1. Чем различались первое и второе поколение компьютеров?
2. В каком поколении компьютеров стали впервые применяться ин те -
гральные схемы?
3. Благодаря чему уменьшились габариты персональных компью теров?
4. Чем отличается суперкомпьютер от обычного компьютера?
20
СИСТЕМЫ СЧИСЛЕНИЯ
“Всё сущее есть число”. Таков был главнейший лозунг пифаго рейцев, отра -
жающий необычную роль чисел в повседневной жизни человека.
Уже в глубокой древности люди научились считать и записывать числа. Только
записывали они их совершенно по-другому – не так, как мы. Несмотря на это,
число обозначалось одним или несколькими символами, ко то рые именовали
цифрами.
А что  же такое число? Первоначально число было связано с исчис ляемыми
предметами, но с появлением письменности оно отделилось от предметов, и
возникло понятие натуральных чисел. Измерения, при которых измеряемая ве ли -
чина не укладывалась в целое число единиц измерения (эталона), поро дили
необходимость возникновения дробей. В дальнейшем понятие числа в математике
получило еще большее развитие, и теперь оно считается одним из основных
понятий не только математики, но и информатики.
Число 
Число – это показатель той или иной величины.
3.1.
Цифра
Цифрами называются символы, участвующие в записи чисел и соответствую щие
определенному алфавиту.
3
АРИФМЕТИЧЕСКИЕ 
ОСНОВЫ КОМПЬЮТЕРА 
Число записывается цифрами в соответствии с определенными правилами. На
разных этапах развития человечества эти правила были разными у разных
народов. В наши дни эти правила принято называть системами счисления.
Системы счисления бывают позиционные и непозиционные. Непозицион ные
системы счисления зародились задолго до позиционных и только на опре де лен ном
этапе исторического развития появились позиционные системы счисления.
Непозиционные системы счисления. Необходимость в счете возникла
естественным образом еще в каменном веке – для подсчета собранных плодов,
пойманной рыбы и количества добытой дичи. Археологические находки, отно -
сящиеся к эпохе палеолита (камни, кости животных), показывают, что люди того
времени старались группировать точки, черточки, зарубки по три, по четы ре, по
пять или по семь. Такая система записи чисел именуется еди ничной систе мой
счисления, так как в ней запись необходимого числа ведется при помощи повторения
одного и того же знака, символизирующего единицу. Группировка и вспомогательные
знаки использова лись лишь для об лег чения восприятия
больших чисел.
Подсчет предметов по одному удобно вести, толь ко
если их не слишком много. Вести подсчет больших
количеств предметов по таким правилам, то есть мето -
дом повторения, довольно утомительно, поэтому воз -
ник ла идея объединения единиц в группы. Появился
счет пятер ками, десятками, двадцатками (по числу
пальцев на руках и ногах). Затем стали приобретать
свои, от дель ные, названия такие числа, как десять раз
по десять (сотня), десять раз по сто (тысяча). Для
удобства записи основные числа стали обозначаться
специаль ными символами. Так, если во время счета
получалось две сотни, семь десятков и четыре пред -
мета, то символ сотни повторно записыва ли два раза,
символ десятка – семь, а символ единицы – четыре
раза. Для обозначе ния единиц, десятков и сотен
использовались отличаю щиеся друг от друга символы. 
При такой записи чисел символы можно  было
записывать в любой последовательности – значение
числа от этого не менялось. Оттого, что при такой
записи позиция символа не имеет значения, по доб ные
Системы счисления
Системы счисления – это способы (правила)  записи чисел при помощи цифр.
22
Единичная система счисле ния,
которую использовали еще
первобытные люди, ведя счет
на стенах пещер при помощи
зарубок, сде ланных костями
животных и ветка ми, не забыта
и поныне.
На рукавах мундиров кур сан -
тов военных школ име ются
нашивки в виде линий –
шевроны. Их количество
обозначает курс, на котором
учится данный курсант.
На фюзеляжах асов военно-
воздушных сил количеством
звездочек обозначалось ко ли -
чество сбитых вражеских
самолетов.
системы именуются непозиционными. Системы счис ле ния древних егип тян,
греков и римлян были непозиционными.
В непозиционных системах счисления количественный эквивалент
(“вес”) цифры не зависит от ее расположения в записи числа. Рассмотрим
записанное в римской системе счисления число III. В десятичной системе
счисления это 3. В записи числа III используются три одинаковых “цифры” (I),
равных по дос то инству. Другими словами, при записи данного числа, вне
зависимости от положения, “вес” цифр одинаков и равен единице.
Римская система счисления. В римской системе счисления в качестве
цифр используются латинские буквы (их называют римскими цифрами).
В римской системе число CCXXXII состоит из двух сотен, трех десятков и двух
единиц и равно 232.
Если при написании числа римскими цифрами цифры выстраиваются сле ва
направо в порядке убывания, то их значения складываются. 
Если же меньшая по значению цифра стоит слева от большей, то их значе ния
вычитаются.
МCМХCVIII = 1000+(-100+1000)+(-10+100)+5+1+1+1=1998
ММVIII=1000+1000+5+1+1+1 = 2008
Теперь рассмотрим способ записи римскими цифрами числа 444.
I V Х L C D М
1 5 10 50 100 500 1000
Если слева стоит большая цифра, а справа –
меньшая, то их значения складываются.
VI = 5 + 1 = 6
Если слева стоит меньшая цифра, а справа –
большая, то их значения вычитаются.
IV = 5 – 1 = 4
Состав числа CCXXXII
100 100 10 10 10 1 1
232
233. АРИФМЕТИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 
Алфавитные системы. Наиболее совершенными из непозиционных сис тем
являются алфавитные системы. Такие системы счисления были у фини кий цев,
греков, арабов, славян и других народов. В алфавитных системах числа от 1 до 9,
целые десятки (от 10 до 90) и целые сотни (от 100 до 900) обоз на чались
определенными буквами алфавита.
Система  счета абджад
В арабском алфавите каждой букве присвоено числовое значение. То есть, в этом алфавите
каждая буква может быть выражена числом, и наоборот, каждое число – буквой. Выходит, что
и у каждого слова имеется, помимо буквенного, еще и числовое значение. Используя это,
можно кодировать слова и производить различные расчеты. Такой метод кодирования и
вычисления называется системой счета  абджад. 
Древние арабы, тюрки, фарсы записывали даты всех событий при помощи букв, которые,
как уже упоминалось, имели и числовое значение. Таким образом, слова не только
отображали то или иное событие, но и несли в себе информацию о его дате. Например,
Мухаммед Физули в поэме “Лейли и Меджнун” зашифровал дату завер шения труда над
этой поэмой в выражении: “В единое слившиеся двое влюбленных” — “Bir olmaq ilə iki
aşiq”.
Сначала подсчитаем числовое значение слова “aşiq” (“влюбленный”) по пра вилу абджад:
Полученное число надо умножить на два, так как в тексте речь идет о двух влюбленных.
К результату прибавим единицу («В единое…») и получим 943 год по хиджре:
(471 · 2 + 1 = 943).
В переводе на нынешнее летоисчисление это 1537 год. 
24
1. Что такое система счисления?
2. На какие группы подразделяются системы счисления?
3. Почему римская система счисления является непозиционной?
4. Что такое алфавитные системы?
5. Какие числа записаны здесь римскими цифрами? 
CХХVII
МCМХVIII
МCМХCI
6. Восстановите равенство, передвинув всего одну палочку.
ПОЗИЦИОННЫЕ СИСТЕМЫ СЧИСЛЕНИЯ
Системы счисления, основанные на принципе позиционности, воз ник -
ли, независимо друг от друга, в древнем Вавилоне (Междуречье), у
народности майя и, наконец, в Индии. Это доказывает, что возникно ве ние
принципа позиционности не было случайностью. 
Ученые Вавилона использовали шестидесятеричную систему счис ле ния,
однако на практике чаще применялся ее сложный гибрид с деся тич ной
системой. Индийские математики, многое позаимствовавшие у вави лонских
ученых, разработали  десятичную систему счисления. В VI веке они создали
способ записи чисел при помощи всего 9 цифр. Вместо нуля сначала
использовали пробел, затем – точку или маленький кру жок. В IX веке
появился специальный знак для нуля. Долгое время понятие нуля выглядело
неясным и абстрактным (зачем, мол, нужен знак для обозна че ния чего-то
несуществующего?), однако со временем новый метод записи чисел стал всем
понятен и привычен.
3.2.
253. АРИФМЕТИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 
26
В позиционной системе счисления количественный эквивалент (“вес”) цифры
зависит от ее положения в записи числа. Рассмотрим число 222. В его записи трижды
повторяется число “2”. Однако “вклад” в величину числа у каждой из этих цифр
различный. Первая двойка обозначает сотни, вторая – десятки, третья – единицы. Если
сравнить “вес” перечисленных цифр, то окажется, что первая из них в 10 раз “больше”
второй и в 100 раз “больше” третьей. Подобный принцип отсутствует в непозиционных
системах.
У позиционных систем счисления есть два огромных преимущества:
1. Простота  выполнения  вычислений.
2. Ограничение количества символов, необходимых для записи чисел.
Позиционных систем счисления много, но самой известной из них является
система счисления с основанием десять. В этой системе счисления для записи
чисел применяется десять различных знаков: 
0, 1, 2, 3, 4, 5, 6, 7, 8, 9.
Позиционные системы счисления
В позиционных системах счисления величина, обозначаемая цифрой, зависит от позиции,
занимаемой данной цифрой в записи числа.
Первоначально в Древнем Вавилоне использовалась непозиционная система счисления, однако
затем ее сменила позиционная. Но в этой системе при перемене места (позиции) цифры ее
значение возрастало не в 10 раз, как в системе, ныне используемой нами, а в 60 раз. То есть,
вавилоняне использовали шестидесятеричную систему счисления. Долгое вре мя в вавилонской
счетной системе отсутствовал нуль, то есть  не было символа пропущенного разряда. Но с
началом составления обширных математических и астро номических таблиц возникла
необходимость в подобном символе. Некоторые следы вавилонской системы счисления можно
наблюдать и в нашей современной жизни. 
Например:
1 час = 60 минут
1 минута = 60 секунд
Основание системы счисления
Количество цифр, используемых позиционной системой счисления, определяет
основание системы счисления.
В системах счисления, основания которых мень ше 10,
используются имеющиеся цифры, мень шие ос но ва ния
этих систем. Например, в восьме рич ной систе ме счис -
ления применяются  только циф ры 0, 1, 2, 3, 4, 5, 6, 7.
В системах счисления, основания которых боль ше
10, недостающие цифры обозначаются пропис ными
буквами ла тинского алфавита. Например, в шестнад ца -
те ричной системе ис поль зуются следую щие цифры:
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, А, Б, Ъ, Д, Е, Ф. 
Здесь буквы A, B, C, D, E, F (цифры шестнадцатеричной системы) соот -
ветствуют числам 10, 11, 12, 13, 14, 15, 16 десятичной системы счисления. В
таблице 3.1. указано, как следует считать числа в восьмеричной системе:
Таблица 3.1.
При счете в восьмеричной системе (так же, как и в других системах счисления,
отличных от десятичной) рекомендуется говорить не “десять”, “одиннадцать” и
т.д., а “один ноль”, “один один” и т.д. Это указывает на то, что речь идет не о де ся -
тичной системе. В таблице 3.1. отражена, например, правильность таких ра венств:
8 в десятичной = 10 в восьмеричной
13 в десятичной = 15 в восьмеричной
16 в десятичной = 20 в восьмеричной
Для проведения расчетов в восьмеричной системе можно воспользо ваться  таб -
лицей 3.2.
Таблица 3.2.
При работе с различными системами счисления основание системы, к ко то рой
принадлежит то или иное данное число, обозначают нижним индексом, например,
2610, 328.
Десятичная 8 16 24 32 40 48 56 64 72 128 512
Восьмеричная 10 20 30 40 50 60 70 100 110 200 1000
Десятичная 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
Восьмеричная 1 2 3 4 5 6 7 10 11 12 13 14 15 16 17 20
273. АРИФМЕТИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 
Название системы счис ления
определяется числом,
которое состав ляет его
основание. Так, система
счисления с осно ванием 10
называется десятич ной,
система счисления с осно ва -
нием 8 – восьмеричной.
Развернутая форма записи числа. Число А= (аn,аn-1, ...а1,а0 –
цифры числа), записанное в системе счис ления с основанием p, можно пред ста вить
в виде многочлена:
А= анпн + ан-1пн-1 + ан-2пн-2 +... +а1п1 + а0п0
Представление числа в виде многочлена называется развернутой формой записи числа.
Например, десятичное число 12345 можно записать так:
12345=1·10000+2·1000+3·100+ 4·10+5=1·10 4+2·103+3·102+4·101+5·100.
Если число не является целым, то первый разряд после запятой соответ ствует
числителю дроби, знаменатель которой равен основанию данной сис те мы
счисления. Второй разряд после запятой соответ ствует числителю дроби,
знаменатель которой равен квадрату основания данной системы счис ления, тре тий
разряд – числителю дроби, знаменатель которой равен кубу основания данной
системы счисления и т.д. В таком случае число А, записанное в виде
можно представить в виде многочлена: 
А=аnpn+аn-1pn-1+аn-2pn-2+... + а1p1+а0p0+а-1p-1+а-2p-2+... + а–mp–m
Например: 
123,45=1·102+2·101+ 3·100+4·10-1+5·10-2
аnаn-1аn-2... а1а0, а-1а-2... а-m
аn аn-1...а1а0
Позиционная система счисления
В компьютерной литературе и в некоторых языках программирования встречаются числа,
записанные в четырех различных системах счисления – двоичной, восьмерич ной,
десятичной и шестнадцатеричной. Приняты определенные соглашения по поводу их
письменной формы.  
1. Десятичные числа записываются обычным способом, например: 
12345;  54321;  222.22  
2. Перед восьмеричными числами указывается ведущий нуль, например: 
012345;  054321;  0222.22  
3. Перед шестнадцатеричными числами указывается ведущий префикс “0х” или “0Х”,
например: 
0х12345;  0х54321;  0х222.22  
4. Если по контексту и так ясно, что речь идет о двоичном числе, то в его записи не
применяется никаких специальных знаков, например: 
0111 0010;  0011 0001 
В противном случае после числа пишется “BIN”:
111 BIN;  1111 1111 BIN
28
1. Какие системы счисления называются позиционными?
2. К какой системе счисления можно отнести число 12350?
3. Используя таблицы 3.1 и 3.2, напишите числа в восьмеричной сис теме,
соответствующие приведенным числам в десятичной системе: 
1710, 2010, 2510, 3010, 4110, 5810, 6510.
4. Сравните числа: 
а)  510 и 58
б) 11112 и  11118
5. Запишите числа 241, 242, 243, 250, 251 в системе с основанием 240.
ПЕРЕВОД ЧИСЕЛ ИЗ ОДНОЙ СИСТЕМЫ СЧИСЛЕНИЯ 
В ДРУГУЮ
Как перевести число, записанное в одной системе счисления (например, де ся -
тичной), в другую систему счисления (например, семерич ную)?
Вам уже, наверное, известно, что записать некоторое число А в семерич ной
системе, значит,  представить его в виде следующей суммы:
А=аn·7 n+аn-1·7n-1+ ... +а1·71+а0
Значит, чтобы записать некое число А в семеричной системе, нужно найти
коэффициенты а0, а1, .., аn, имеющие одно из значений от 0 до 6. Разделим число
А на семь. Остаток составит, естественно, а0–а потому что, как видно из
вышеприведенной развернутой формы записи числа А, все его слагаемые, кроме
последнего, делятся нацело на семь. Результат деления числа А на семь снова
разделим на семь. На сей раз остаток составит а1. Если продолжить этот про цесс и
далее, то мы найдем все цифры числа А в семе ричной системе.
Перевод целых чисел из десятичной системы счисления в дру гую
систему счисления. Переведем в семеричную систему счисления  число 328710.
Разделив его на семь, получим 469, и 4 в остатке. Значит, в записи числа 3287 в
семеричной системе последней цифрой будет 4. Чтобы получить сле дую щую
цифру, разделим полученное в результате предыдущего деления число 469 на семь.
Частное составит 67, остаток – 0. Значит, вторая с конца цифра записи числа 3287
в семеричной системе – 0. Затем делим 67 на семь и получаем 9, и 4 в остатке. Этот
остаток (4) и будет третьей с конца цифрой записи 3287 в семеричной системе.
Наконец, разделив 9 на 7 (последний раз), получаем 1, а остаток составит 2. Эта
3.3.
293. АРИФМЕТИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 
цифра – 2 будет четвертой с конца в записи, а частное, то есть 1, будет пятой с
конца, или первой с начала (так как дальше это число нацело на семь не делится).
Получаем:
328710 = 12404 7
Правая часть этого равенства – сокращенная форма выражения:
1·7 4 + 2·7 3 + 4·7 2 + 0·7 + 4
Точно так же, как 3·103 + 2·102 + 8·10 + 7 – запись числа 328710 . 
Вышеприведенные вычисления для перевода числа 328710 в семеричную
систему удобнее представить в следующем виде: 
или
Разумеется, подобный способ можно применять для перевода любого чис ла не
только в семеричную систему, но и в любую другую систему счисления. 
Правила перевода любого числа А из десятичной системы счисления в систему
счисления с основанием p таковы:
– разделить число А на p: полученный остаток будет цифрой первого разряда в
искомой записи (последней цифрой числа); 
– полученное частное вновь разделить на p: полученный остаток будет цифрой
второго разряда, и т.д.;
– процесс этот нужно продолжать до тех пор, пока частное не окажется меньше
основания системы счисления (то есть меньше p) – последнее полученное
частное будет цифрой высшего разряда.
Вот еще один пример: перевести число 100 в двоичную систему. Применив
указанные правила, получим: 
3287 : 7 = 469  4
469 : 7 = 67  0
67 : 7 = 9  4
9 : 7 = 1 2  ⇒ 124047
3287|—7
4 469 |—7
0 67 |—7
4 9  |—7
2 1
30
Итак, 10010 = 11001002
При работе на компьютере иногда приходится переводить числа из
десятеричной системы в двоичную. О двоичной системе счисления вы более
подробно узнаете на следующем уроке. 
В рассмотренных выше примерах исходной системой являлась десятичная. Но
по тем же правилам можно переводить числа из какой угодно системы в ка кую
угодно – для этого нужно выполнить ту же последовательность дей ствий, что и в
приведенных примерах. Проводить эти операции нужно не в де ся тичной системе
счисления, а в той системе, в которой записано данное число.
Заметим, что производить деление в системе счисления, отличной от деся -
тичной, довольно затруднительно.
Перевод дробных чисел из десятичной системы счисления в дру гую.
При переводе дробных чисел из одной системы счисления в другую сна чала
переводится целая часть числа, затем – дробная. Целая часть переводится по
указанным выше правилам.
А вот правила перевода дробной части:
– дробная часть записанного в десятичной системе числа умножается на
основание той системы, в какую переводится число;
– целая часть полученного произведения (она может равняться и нулю)
будет очередной цифрой в записи дробной части числа в новой системе;
– дальнейшие операции совершаются над остатком произведения;
– последняя десятичная дробь в новой системе может оказаться беско неч ной
(периодичной). В этом случае операция считается закончен ной, если
достигнута необходимая точность (определен период дроби). 
Переведем, к примеру, дробное число 0,6875 в восьмеричную систему счис ления.
0,6875· 8 = 5,5
0,5·8 = 4
Таким образом, 0,6875
10
=0,548.
А теперь переведем то же самое дробное число в пятеричную систему счисле -
ния. Это, обычно, записывается следующим способом:
100|—2
0 50|—2
0 25|—2
1 12|—2
0 6 |—2
0 3 |—2
1 1
313. АРИФМЕТИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 
Дробная часть числа повторяется, то есть будут возникать одни и те же циф ры
в одинаковой последовательности. Значит, 0,6875
10
=0,(3204)
5
. В скоб ках указан
период дроби.
1. В ящике 318 шариков. Из них 128 шариков красные, 178 – желтые. До ка -
жите, что здесь нет ошибки.
2. В классе 1111
2
девочек и 1010
2
мальчиков. Сколько учащихся в классе?
3. Назовите свой возраст в шестнадцатеричной системе счисления. 
4. Запишите число 2008 в двоичной, восьмеричной и шестнадцатеричной
системах счисления.
5. Переведите число 321
10
в семеричную систему.
ДВОИЧНАЯ СИСТЕМА СЧИСЛЕНИЯ
Как вы знаете, все устройства компьютера работают по сигналам. Эти сиг налы
удобнее всего представлять в двоичной форме. Элементы компью тер ных систем
всегда находятся в одном из двух состояний: “есть ток – нет тока”, “открыто –
закрыто”, “поднято – опущено”, “намагничено – не намаг ни чено”, и т.д. Эти
парные состояния можно показать, используя  две  цифры двоичной системы
счисления: 0 и 1. 
Для человеческого восприятия числа, записанные в двоичной системе,
слишком длинны и неудобны, например:
9999
10 
= 100111000011112.
Длинные последовательности нулей и единиц плохо воспринимаются и тяжело
запоминаются. Для более краткой и удобной записи  чисел исполь зуются
шестнадцатеричная либо восьмеричная системы счисления. Их осно вания (8 и 16)
0 6875
× 5
3 4375
× 5
2 1875
× 5
0 9375
× 5
4 6875
3.4.
32
3. АРИФМЕТИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 33
тесно связаны с 2: 16=24,  8=23. Между двоичной и восьме рич ной, а также
двоичной и шестнадцатеричной системами счисления имеются простые связи,
которые представлены в следующих таблицах.
В связи с этим существует очень легкий способ перевода чисел из двоичной
системы в шестнадцатеричную или в восьмеричную. 
Для перевода целых (и дробных) двоичных чисел в систему счисления с
основанием  p=2
n
можно использовать  следующее правило:
– Заданное число разбивается на группы из n символов, начиная с са мой
первой цифры справа для целых чисел  и самой первой цифры слева
(после запятой)  для дробных чисел.  При необходимости для получения
полных  n групп крайняя слева (у дробных чисел - край няя справа)
группа дополняется нулями;
– Каждая группа рассматривается как n-значное двоичное число и за -
меняется соответствующей (эквивалентной) цифрой в системе счис -
ления с основанием p ;
– Полученная запись будет записью данного числа в системе счисления с
основанием p.
Например, требуется перевести число 100111000011112 в восьме рич ную
систему счисления. Для этого запишем его следующим образом:
Заменив каждую группу, состоящую из  двоичных цифр, восьмерич ной
цифрой, получим:
100111000011112 = 234178
010
2
011
3
100
4
001
1
111
7
8-ная 2-ная
0 000
1 001
2 010
3 011
4 100
5 101
6 110
7 111
16-ная 2-ная 16-ная 2-ная
0 0000 8 1000
1 0001 9 1001
2 0010 А 1010
3 0011 B 1011
4 0100 C 1100
5 0101 D 1101
6 0110 E 1110
7 0111 F 1111
Операции над двоичными числами крайне просты. 
Следующие равенства демонстрируют правила сложения: 
Таблица умножения 
в двоичной системе: 
Единственным недостатком двоичной системы счисления является, как уже
говорилось ранее, ограниченное количество цифр, в связи с чем запись числа полу -
1001
×
1101
---------------
1001
1001
1001
---------------
111 0101
0 · 0 = 0
0 · 1 = 0
1 · 0 = 0
1 · 1 = 1
1001
+
1101
------------
10110
0 + 0 = 0, 
0 + 1 = 1
1 + 1 = 102
Вот интересный пример, связанный с двоичной системой записи чисел.
Допустим, ваш товарищ задумал произвольное число  от 1 до 1000. Вы, задавая
ему вопросы, должны отгадать это число. Отвечать можно только “да” или “нет”.
Для отгадывания числа используйте не более 10 вопросов. 
Первый вопрос может быть примерно такой:
“Раздели задуманное тобой число на 2. Оно делится без остатка?” Если
ответ “да”, запишите себе “0”, если “нет” – “1” (другими словами, мы
отмечаем  остаток от деления этого числа на 2).
Второй вопрос: “Раздели на 2 частное, полученное при первом делении задуман -
ного числа. Оно делится без остатка?” И вновь, если ответ “да”, запишите
себе “0”, если “нет” – “1”.
Последующие вопросы будут точно такими же. 
И всякий раз, если ответ будет  “да”, записывайте себе “0”, если “нет” - “1”.
Проведя эту процедуру 10 раз, вы получите 10 цифр (единиц и нулей). Нетрудно
представить себе их как запись искомого числа в двоичной системе. Ведь ряд
заданных вами вопросов – ни что иное, как метод перевода заданного числа в
двоичную систему счисления. Десяти вопросов в данном случае вполне хватает,
потому что любое число от 1 до 1000 в двоичной системе будет записано не
более чем 10-значным числом. Если предположить, что загаданное число уже
записано в двоичной системе, то для его определения потребуется система
вопросов, при которой о каждой его цифре будет последовательно спрошено,
равняется ли она нулю.
34
чается очень длинной. Но несмотря на этот недостаток, двоичная система счи сле -
ния широко используется в различных областях техники, в частности, в
компьютерной сфере. 
Как известно, компьютер работает с различной информацией (текстами,
изображениями, звуковыми записями). Но сколь бы различной ни была ин фор -
мация, в компьютере она хранится в единой форме, то есть в закодиро ван ном виде.
Эта единая форма, как уже отмечалось – двоичный код, состоящий из после до -
вательности нулей и единиц. Один разряд двоичного кода (0 или 1) называется бит
(от англ. binary digit – “двоичная цифра”).
Количество различных символов, которые можно закодировать двоичным
способом, зависит от разряда двоичного кода. Один бит может выражать два
значения. Двумя битами  можно выразить уже четыре значения:
00, 01, 10, 11. 
При увеличении количества разрядов кода на  единицу количество значений,
представленных  данным кодом, увеличивается в два раза.
Для кодирования реального текста требуется около 100 различных символов
(про писные и строчные буквы, цифры, знаки препинания, часто встречающиеся
ма тематические символы и т.д.), поэтому необходим 7-битный либо 8-битный код.
Второй вариант более удобен, так как 8 – это степень числа 2:
8=2 3. 
В восьмиразрядном коде каждая группа из восьми битов отображает один элемент
(символ). Последовательность из восьми битов называется байтом. 
Один байт способен представлять 2
8
=256 различных значений. Но иногда
целесообразнее группировать данные не в байты, а в
более крупные группы – так, первый из семейства
компьютеров PC компании IBM использовал 16-ра -
зрядные значения. Группу из 16 взаимосвязанных битов
называют “сло вом”. Слово со стоит из двух байтов.
Впоследствии возникли такие единицы измере ния,
как двойное слово (32 бита, или 4 байта) и чет верное
слово (64 бита, или 8 байт). Обычно в одном байте
зашифровывается один символ тексто вой информации,
поэтому объем текстового до ку мента в байтах, как
правило, равен количеству сим волов в этом документе.
Наиболее часто используемая единица измерения –
килобайт (Кбайт). А поскольку в вычислительной тех -
нике числа представляются в двоичной системе
счисления, то:
1 Кбайт = 1024 байт = 210байт.
Слово “byte” возникло при -
мер но в 1965 году, ког да в
компании IBM решили обо -
зна чить новое понятие сло -
вом “bite” (в переводе с
англ. “кусок”), но писать
его как “byte”, во избежа ние
путаницы. Некоторое время
словом “байт” обоз на чали
просто количество битов в
пото ке данных. Но в
середине 60-х гг минув шего
века, с со зданием ком па -
нией IBM вычислитель ной
ма ши ны “System/360”, этим
словом стали обозна чать
группу из 8 битов.
353. АРИФМЕТИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 
36
Но так как человеку удобнее использовать деся тичную систему счисления, то
в сферах, где это не столь важно, один  килобайт рассматривают как ты ся чу байтов
(1Кбайт = 1000байт). Объем текста в один килобайт – примерно пол страницы.
Названия более крупных единиц измерения образуются прибавлением
приставок мега-, гига-, тера-.
1 Мбайт (один мегабайт) = 210 Кбайт = 220байт; 
1 Гбайт (один гигабайт) = 210 Мбайт = 230байт. 
1 Тбайт (один терабайт) = 210 Гбайт = 240байт
1. Почему в компьютерах используется двоичная система счисления?
2. Опишите правила перевода чисел из двоичной системы счисления в
восьмеричную и десятичную системы. 
3. Переведите двоичные числа 101011011; 1111110011; 100000001110 в
восьмеричную систему. 
4. Переведите числа А54; 21Е; 34AD из шестнадцатеричной системы
счисления сначала в двоичную, а потом в восьмеричную.
4
ЛОГИЧЕСКИЕ ОСНОВЫ
КОМПЬЮТЕРА
ФОРМАЛЬНАЯ ЛОГИКА
Во всех современных компьютерах применяется логическая система,
созданная Джорджем Булем. При обработке данных в компьютере процессор
выполняет математические и логические операции над ними. Поэтому для того,
чтобы получить полное представление о строении компьютера, важно озна -
комиться с логическими элементами, лежащими в его основе.
Логика – наука о законах и
формах мышления. Как и в дру -
гих науках, в ло ги ке имеют ся
собственные понятия.
4.1.
Термин “логика» происходит от древнегреческого сло ва
“logos», которое можно перевести как “слово, мысль,
рассуждение».
Основные понятия формальной логики. Одним из основных разделов
науки логики является формальная логика.
Основные понятия формальной логики таковы:
– высказывание
– утверждение
– рассуждение
– умозаключение.
Высказывание – это предложение, которое может быть либо истинным, либо
ложным. Высказывание представляет собой повествовательное пред ло жение, в
котором что-либо утверждается либо отрицается. Например: 
высказывание “А” – гласная буква” 
истинно, а высказывание 
“Река Араз впадает в Черное море”
ложно.
Существует только две возможные логические оценки: 
“истина” и “ложь”. 
По-английски эти оценки называются – “true” и “false” и кратко обозна чают
буквами Т и F.
Логические оценки можно обозначить и двоичными цифрами – нулем (0) и
единицей (1). Каким из этих символов обозначать “истину”, а каким – “ложь”, не
столь важно. Но обычно за единицу (1) принимается “истина”, а за нуль (0) –
“ложь”.
Следует отметить, что истинность или ложность высказывания опре де ляется
не формальной логикой. Этим занимается конкретная наука, к которой имеет
38
Джордж Буль 
(1815-1864)
В 1847 году Буль написал масштабную статью на тему “Матема ти -
ческий анализ логики”, а в 1854 году развил свои идеи в работе
“Исследование законов мышления”. 
Буль создал оригинальную алгебру – систему правил и обозна чений,
которые могут быть применены к любым возможным объектам,
единицам,  цифрам  и буквам. В его честь эта алгебра получила
название булевой алгебры.
отношение то или иное высказывание. Так, логическая оценка суждения:
“Ананасы растут на деревьях” (“ложь”)
определяется не формальной логикой, а ботаникой.
Утверждение – это высказывание, требующее либо доказательства, либо
опровержения. Например: 
“Сумма внутренних углов треугольника равна 180°”. 
Рассуждение – это цепочка высказываний или утверждений, связанных
определенным образом между собой. 
Умозаключение – это логическая операция, в результате которой из данного
высказывания (или нескольких высказываний) получается новое высказывание.
Доказательство – это цепочка логических умозаключений, показывающая
истинность  некоторого утверждения при выполнении определенных условий.
Наука, изучающая доказательства математическими методами, назы вает ся
математической логикой. Высказывания делятся на две категории:
– логические утверждения;
– предикаты.
Логические утверждения – это особые утверждения, которые либо истин ны,
либо ложны (другими словами, логические константы). Нижеследующие
высказывания являются  логическими константами:
– “2 × 2 = 4” (Истина)
– “Компьютер был изобретен в середине XIX века” (Ложь)
Предикаты – это логические высказывания, меняющие свое значение в
зависимости от входящих в их состав величин, другими словами, логических
переменных.
4. ЛОГИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 39
Примеры предикатов с логическими переменными:
“a+b>c”   
(в зависимости от значений a, b и c высказывание будет либо истинным,
либо ложным);
“N – целое число” (в зависимости от значения N высказывание будет либо
истинным,  либо ложным).
1. Что такое высказывание?
2. Приведите по одному примеру истинного и ложного высказыва ния.
3. Какие из этих высказываний истинны?
а) “Низами Гянджеви – автор произведения “Фархад и Ширин”
б) “Третье тысячелетие началось 1 января 2000 года”
в) “Крокодил сильнее льва”
г) “Самая высокая гора Азербайджана – Савалан”
д) “Два в кубе равняется восьми” 
ЛОГИЧЕСКИЕ ОПЕРАЦИИ
Итак, объекты булевой алгебры – высказывания. При помощи логи че ских
операций высказывания объединяются, образуя логические вы ра жения.
Над высказываниями можно произвести три основные операции:
1) инверсия (логическое отрицание), 
2) дизъюнкция (логическое сложение), 
3) конъюнкция (логическое умножение).
Логическое отрицание. Логическое отрицание – унарная (одноместная)
операция, так как в ней участвует только одно высказывание. Другими словами, у
нее имеется только один аргумент. Высказывания обозначаются, как и в алгебре,
прописными латинскими буквами: 
A, B, C… 
Операцию логического отрицания обозначают частицей “не” (не А), символом
¬ (¬А) или чертой над суждением (–А).
В результате операции отрицания логическое значение высказывания ме ня ется на
противоположное, то есть истинное высказывание становится лож ным, а ложное –
истинным. Это можно показать при помощи следующей таблицы:
Таблица истинности для логического отрицания
А
¬
А
Ложь Истина
Истина Ложь
4.2.
40
Таблица, включающая все возможные значения ис -
ходного высказывания и значения, получаемые в ре -
зультате операции, называется таблицей истинности.
Логическое сложение (дизъюнкция). Логи че -
ское сложение – бинарная (двухместная) операция, в
которой участвуют два высказывания. Другими сло ва -
ми, у нее имеется два аргумента. Эта операция обо -
значается союзом “или”, знаком V, а иногда сим волом
“+”. 
Результат операции логического сложения будет
истинным, если или А, или В, или оба одновременно
будут истинны. Результат будет ложным, если А и В
ложны одновременно.
Таблица истинности для  логического сложения
А B А V B
Истина Истина Истина
Истина Ложь Истина
Ложь Истина Истина
Ложь Ложь Ложь
4. ЛОГИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 41
Рассеянный Анар
потерял ключ от
дома. Но как толь ко
родители сме ни ли
замок на двери, он на шел
потерянный ключ. Воз можно
ли создать та кой “супер за -
мок”, чтобы Анар мог от -
крыть его и прежним клю -
чом, но ник то посто рон ний
во обще не смог бы его от -
крыть? Как вы ду мае те, на
какой ло гической опе рации
был бы основан принцип
действия такого замка?
Примеры для операции логического сложения:
“Для того чтобы успешно сдать экзамены, нужны либо знания, ли бо ве зе -
ние”
“Высказывание А: “p – четное число”, то есть p = {2, 4, 6, 8, 10, …}.
Высказывание В: “p делится на 3”, то есть p = {3, 6, 9, 12, 15, …}. 
Тогда результат логической операции А v В – 
“p – четное число” ИЛИ  “p делится на 3” будет
p = {2, 3, 4, 6, 8, 9, 10, 12, 15, …} – объединение двух множеств.
42
Логическое умножение (конъюнкция). Логическое умножение – бинар -
ная (двухместная) операция, так как в ней участвуют два высказывания. Дру ги ми
словами, у нее имеется два аргумента. Эта операция обозначается сою зом “и”,
знаком или &, а иногда символом *.
Результат операции логического умножения будет истинным только в том
случае, если А и В истинны одновременно. 
Чтобы не путать операции логического сложения и логического умножения, запомните такой
«факт»: логическое сложение более «покладистое» («Хоть что-нибудь!»), тогда как логическое
умножение более «суровое» («Всё или ничего!») 
Таблица истинности для логического умножения
А B
Истина Истина Истина
Истина Ложь Ложь
Ложь Истина Ложь
Ложь Ложь Ложь
Некий богач, опасаясь воров,
установил на двери сразу два
замка. С какой логической
операцией можно сравнить
процесс отпирания такой
двери?
Прочие логические операции. Изученные выше операции являются ос -
нов ными логическими операциями. Существуют и другие логические опе рации,
но они не считаются основными, так как их можно выразить посред ством трех
основных операций. Ознакомимся с двумя из них:
импликацией и эквивалентностью.
Логическое следование (импликация). Логическое следование – би -
нарная операция. Эту операцию можно выразить словами “если А, то В”, для ее
обозначения используется  символ “⇒”. 
Результат импликации будет ложным только в том случае, если исходное
условие А истинно, а В – ложно. В остальных случаях он будет истинным.
4. ЛОГИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 43
Примеры операции логического умножения:
“Педагог должен быть и грамотным, и терпеливым”
“Для того чтобы достичь цели, нужны умение и упорство”
Высказывание А: “p делится на 5”, то есть p = {5, 10, 15, 20, 25, …}. 
Высказывание В: “p меньше 20”, то есть p = {1, 2, 3, 4, 5, …, 19}. 
Тогда результатом логической операции А B будет: “p делится
на 5”   И “p меньше 20” будет 
p = {5, 10, 15} - пересечение двух множеств.
Формула успеха Эйнштейна:  
У = С О Т
Здесь, У – успех, С – способность, О – обстановка, Т – труд.
Таблица истинности для  логического следования (импликации)
А B А⇒ B
Истина Истина Истина
Истина Ложь Ложь
Ложь Истина Истина
Ложь Ложь Истина
44
Пример операции логического следования:
Высказывание А: “х делится на 9”;
Высказывание В: “х делится на 3”. 
Тогда результатом логической операции А ⇒ B –
“Если число делится на 9”, то оно делится на 3 – является истина.
Эквивалентность. Эквивалентность, как логическая операция, определя -
ет итог сравнения двух простых логических выражений и обозначается зна ком
“⇔”. 
Результат такой операции будет истинным только в том случае, если А и В
ложны или истинны одновременно, в противном случае он будет ложным.
Таблица истинности для  операции эквивалентности
А Б А ⇔ Б
Истина Истина Истина
Истина Ложь Ложь 
Ложь Истина Ложь 
Ложь Ложь Истина
4. ЛОГИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 45
Пример операции эквивалентности:
Высказывание А: “Сумма цифр числа х делится на 3”; 
Высказывание В: “х делится на 3”.
Тогда результат логической операции А ⇔ B –  
“Число делится на 3” только в том случае, когда  сумма его цифр делится
на 3 – является истина. 
Логическое выражение, состоящее из нескольких простых (или сложных) логи -
ческих выражений, связанных между собой логическими операциями, называется
сложным логическим выражением.  
Пусть, например, А, В и С – три простых логических выражения. Тогда
составленное из них сложное логическое выражение может выглядеть так:
D = ¬ (AVB C)
Подобно математическим операциям в математических выражениях, ло ги -
ческие операции в сложных логических выражениях выполняются в опреде ленном
порядке, в соответствии со степенью значимости. Вот этот порядок:
1. Инверсия (¬);
2. Конъюнкция ( );
3. Дизъюнкция (V);
4. Импликация (⇒);
5. Эквивалентность (⇔).
Для изменения указанного порядка выполнения операций, в логических
выражениях используют скобки.
I. Какие из приведенных предложений являются высказываниями?
Опередите их истинность.
1. Перечислите основные устройства компьютера.  
2. Кто отсутствует в классе?
3. Стамбул – столица Турции.
4. 1+1=10.
5. Что посеешь, то и пожнешь. 
6. Чему равно расстояние от Баку до Тебриза?
7. Пингвины обитают в Арктике.
8. Открой окно!
II. Запишите высказывания в логической форме. 
1. Число 19 – нечетное, двухзначное.
2. Корова – не является хищником.
3. Орхан старше Севиль. Тогрул старше Севиль.
4. Если число делится на 2, то оно четное.
5. Если Гюнель – сестра Турала, то Турал – брат Гюнель.
6. Алпай поедет летом в деревню и, если погода окажется хорошая, будет
купаться там в речке.
III. Измените высказывания, используя отрицание.
1. Все люди – высокие.
2. Числа 5, 35 и 67 – дробные.
3. Число 18927 не делится на 3.
4. Ночью бывает светло.
46
ИСТОРИЯ НАУКИ ЛОГИКА 
Логика, с которой вы ознакомились, изучает истинные и ложные выска зыва ния.
Основы этой логики, именуемой классической, заложил древнегре че ский философ
Аристотель, поэтому ее часто называют аристотелевой логикой. 
Культура, базирующаяся на этой логике, опирающейся на категоричные условия
типа
да / нет, старый / новый, верх / низ, черный / белый 
и исключающей третье условие, не менялась тысячелетие. 
Исламская культура, приняв за базовую основу аристотелевую логику, выявила
и  заполнила пробелы в этой логике. Абу Наср аль-Фараби, а позднее – Ибн Сина
(Авиценна) стали использовать в ней не слова, а символы.
Опираясь на эту логику, исламская культура совершила невиданный про рыв.
Результаты его были усвоены Западом, и западная культура вновь, опираясь на эту
логику, совершила очередной скачок в развитии. Такая ло гика, называемая
символической, была систематизирована в начале XX века Б.Расселом.
Но эта логика не успевала за быстрым развитием науки и техники, ей про -
тиворечили научные эксперименты, в особенности – физические явления и за коны
Аристотель 
(384 – 322 до н.э.)
Абу Наср аль-Фараби 
(↔ 870 - 950)
4.3.
4. ЛОГИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 47
физики. Все это послужило толчком к новым исканиям, и наконец, в 1965 году
азербайджанец Лютфи Алескерзаде предложил миру нечеткую ло гику (fuzzy logic),
отражающую не идеальную четкость, принятую в классической и символической
логике, а неопределенные и неточные реалии, господствующие в природе.
В нечеткой логике всё, чего ни коснись, уже не является исключительно бе лым
или черным, а может обладать любым из оттенков серого. Там все уже не является
исключительно хорошим или плохим, а может быть какой-то вариа цией хорошего
или плохого, став темой дискуссии (например, “очень плохо”, “неплохо”,
“сносно”, “посредственно”, “нехорошо”, “очень хорошо”). 
В классической логике понятия “большой / маленький”, “длинный / корот кий”
и т.п. имеют точные (четкие) границы. Скажем, высокими принято считать лю дей,
чей рост превышает 170 см. Тогда ответом на вопрос: 
“Чингиз – высокий?” 
в классической логике, если рост Чингиза, свыше 170 см, будет: “Да, высо кий”,
если же он равен 169 или меньше, то ответом будет: “Нет, невысокий”.    
А вот нечеткая логика спросит: “Насколько высок ростом Чингиз?” В от ли чие
от классической логики, нечеткая логика не дает конкретных значений, не обоз -
начает “высокий” как 1, а “невысокий” как 0. Она предлагает более смяг чен ные
значение – 0.1, 0.2, 0.3… Таким образом, рост 169 см она не назовет не вы соким (0),
а обозначит, например,  как рост 0.2. Разумеется, у нечеткой логики тоже имеются
определенные границы применимости, зависящие от  кон крет ных условий. И
гибкость этих границ – основное отличие нечеткой логики от классической.
Именно эта гибкость (подвижность) приносит го раз до боль шую пользу и более
точные результаты в областях применения не четкой логики.
Слово “fuzzy” в переводе с английского означает “мутный”, “туман ный”.
“Fuzzy logic” дословно переводится как “неясная логика”. 
Лют фи Заде, выражая сущность своей теории, отказался от использо ва ния
классической научной терминологии. 
В русском языке эта логика получила название нечеткой, в азербай джан -
ском для ее обоз начения принят термин “qeyri-səlis məntiq”, в турецком –
“bulanık mantık”. 
А в Японии, где наиболее широко применяется эта теория, за этим
понятием закрепилось слово “fuzzy”.
48
В наши дни модели управления, основанные на нечеткой логике, широко при -
меняются в различных сферах: в бытовой технике (пыле со сы и стиральные машины
с функцией нечеткой логики), в сложных технологи ческих процессах (до менный
процесс, процессы в атомном энергоблоке), в управлении ди на ми ческими объектами
(поезда метро, автомобили, вертолеты, роботы и т.п.).
Всемирно прославленный ученый, “отец нечеткой логики” Лютфи Рагим оглу
Алескерзаде родился в Баку 4 февраля 1921 года. Его отец происходил из видного
ардебильского рода. В начале 30-х гг, когда ситуация в Советском Сою зе, тяжелая
и опасная для представителей всех слоев общества, а в осо бенности для биз -
несменов, инженеров, журналистов, достигла своего пика, семья Лютфи приняла
решение эмигрировать из страны. В 1931 году, когда Лют фи было 10 лет, они
переехали в Тегеран. Мальчик очень увлекался чте нием и к 14 годам уже перечитал
всех классиков – к этому времени в его лич ной библиотеке было около 3000 книг.
Юный Лютфи закончил Американ ский колледж Альборц в Тегеране, а затем –
Тегеранский университет, по лу чив сте пень бакалавра по специальности
“Электротехника”. 
В 1944 году Лютфи переехал в США с целью продолжить обучение. Он посту -
пил в Массачусетский технологический институт (MTU) и в 1946 году получил
там степень магистра по специальности “Электротехника”, а затем, в 1949 году в
Колумбийском университете, – докторскую степень. 
С 1959 года, уже в Калифорнийском университете в Беркли, Лютфи Заде зани -
мается в основном исследованиями в области теории линейных систем и теории
Лютфи Алескерзаде
4. ЛОГИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 49
50
автоматического управления. В 1965 году, в возрасте 44 лет, он публи кует первую
работу по нечетким множествам, впоследствии принесшую ему мировую
известность. Эта работа, имеющая историческое значение, открыла но вое
направление в науке – нечеткие множества (fuzzy sets). Другими слова ми, она
заложила основы теории нечеткой логики (fuzzy logic). Как и всякая ве ли кая идея,
эта теория встретила на своем пути немало препятствий (осо бенно в США) и стала
предметом бурных дискуссий. Дело дошло даже до то го, что в Департаменте
образования США всерьез поднимался вопрос о за пре те на ее преподавание.
(Кстати, существует мнение, что Лютфи Заде сам спрово ци ровал трудности на пути
выдвижения своей теории, назвав ее “fuzzy” – у него, мол, оказалось бы гораздо
меньше противников, если бы он дал ей приемлемое название, ибо слово “нечеткая”
никак не сочетается со словом “логика”).
Пока в Штатах шла полемика по этому поводу, японцы представили миру
регулятор с функцией нечеткой логики, который по скорости в 100 раз пре восходил
лучшие PID-регуляторы. Это событие, а также неустанные уси лия самого Лютфи
Заде по пропаганде его теории,  дали наконец свои результаты.    
В настоящее время нечеткая логика включена в программы многих уни вер -
ситетов мира. А Лютфи Заде и поныне продолжает свои исследования, вы дви гает
оригинальные идеи и создает новые научные направления. И каждая его статья
становится, без преувеличения, событием в научном мире.
1. Кто заложил основы формальной логики? 
2. Кто является основоположником нечеткой логики?
3. В чем отличие нечеткой логики от классической?
4. В каких сферах применяется нечеткая логика?
АЛГОРИТМИЧЕСКИЙ ЯЗЫК
Для того чтобы компьютер смог выполнить ту или иную нужную нам  ра боту,
необходимо задать ему соответствующую программу. Чтобы быть по нятными для
компьютера, программы должны быть написаны по четким пра вилам. Набор таких
правил называется языком программирования. Ком пью тер, воспринимая
программу, написанную на языке программирования, пре об ра зует ее в ту или
иную форму, сохраняет в своей памяти. После этого, по желанию поль зователя, он
может начать выполнять команды данной программы. 
Существует множество языков программирования. В числе наиболее по пулярных
из них – FORTRAN, ALGOL, PASCAL, BASIC, ADA, C, LOGO, PROLOG, JAVA и др.
Алгоритм. Одним из основных понятий информатики и математики является
понятие алгоритма. Алгоритм – это точный, конечный набор ин струк ций, опи -
сывающих порядок действий возможного исполнителя для реше ния поставленной
задачи.
5.1.
5
ПРОГРАММИРОВАНИЕ
Исполнитель алгоритма – это абстрактная или реальная система, вы полня -
ющая инструкции, приведенные в алгоритме.
Школьный алгоритмический язык. Для написания алгоритмов мы будем
использовать особый, школьный алгоритмический язык (в дальнейшем будем
называть его просто алгоритмическим языком). 
Правила алгоритмического языка базируются на правилах языков про г рам -
мирования. Поэтому изучение алгоритмического языка в дальней шем поможет вам
в изучении любого из языков программирования. Вот как, на пример, выглядит
алгоритм вычисления суммы квадратов первых ста на ту ральных чисел на
школьном алгоритмическом языке и на языках програм мирования Basic и Pascal: 
a) школьный алгоритмический язык
alq сумма квадратов
нач цел s, i
s: = 0
нц для i от 1 до 100
s: = s + i* i
кц
вывод “сумма квадратов =”, s
кон
b) Basic
10 S = 0
20 FOR I = 1 TO 100
30 S = S + I*I
40 NEXT I
50 PRINT “Cумма квадратов =”; S
60 STOP
c) Pascal
program sum;
var s, i : integer;
begin
s := 0;
for i := 1 to 100 do
s := s + i*i;
writeln ('Cумма квадратов =', s)
end.
Изучим составление и написание алгоритмов на алгоритмическом языке при
помощи алгоритмов, управляющих исполнителями “Робот” и “Чертежник”.
52
Исполнитель “Робот”. Робот работает на клеточном поле и занимает ровно одну
клетку (квадратик) поля. Клетки могут быть разделены стенами. На бумаге, клас сной доске
или на экране компьютера рабочую среду Робота изобразим сле дующим образом:
Ознакомимся с пятью командами, которые могут быть даны Роботу:  
“вверх”, “вниз”, “вправо”, “влево”, “закрасить”.
При выполнении команд “вверх”, “вниз”, “вправо”, “влево” Робот пе ре -
мещается на соседнюю клетку. Иногда эти команды оказываются невы пол ни мыми.
Например, на  вышеприведенном рисунке видно, что над Роботом имеется стена, а
значит, в этом случае выполнить команду “вверх” из точки А невозможно.
При выполнении команды “закрасить” Робот закрашивает клетку, на которой в
данный момент находится. Если клетка уже окрашена, при выполнении этой
команды она окрашивается заново.
Допустим, нужно переместить Робота из клетки А в клетку В. Вот воз мож ный
алгоритм выполнения этой задачи, составленный на алгоритмическом языке:
алг ход конем
дано | Робот в клетке А
надо | переместить Робота в клетку В
нач
вправо
вправо
вниз
кон
Общие правила алгоритмического языка. Подобно любому языку, ал го -
ритмический язык имеет собственный словарь. Его основу составляют сло ва,
используемые для записи команд, подаваемых исполнителю. Определен ную часть
их составляют слова, смысл и правила использования которых опре делены раз и
навсегда. Это служебные (ключевые) слова. В записи алго ритма служебные слова
обычно бывают представлены в сокращенном виде, а также каким-либо образом
выделены (подчеркнуты, даны жирным шрифтом или другим цветом).
5. ПРОГРАММИРОВАНИЕ 53
Основные служебные слова
Общий вид алгоритма в алгоритмическом
языке:
алг название алгоритма
дано | условия применения
алгоритма
надо | цель выполнения
алгоритма
нач
тело алгоритма (после до ва -
тель ность команд)
кон
Каждый алгоритм делится на две части:
заголовок и тело. Часть алгоритма до слу жеб -
ного слова нач называется заголовком ал -
горитма, а часть между служебными сло ва ми
нач и кон – телом алгоритма.   
У каждого алгоритма, написанного на ал го -
ритмическом языке, должно быть наз ва ние.
Оно подбирается так, чтобы четко отра жать
назначение алгоритма, то есть по казывать, для
решения какой задачи он пред назначен. Для
выделения названия ал го ритма перед ним
записывается служебное слово алг (алгоритм).
Служебные слова алг, нач и кон запи -
сываются друг под другом, причем слова нач и
кон, а также отдельные блоки алго ритма во
избежание путаницы соеди ня ются вер ти -
кальной чертой . Справа от этой черты за пи -
сывается последовательность команд – те ло
алгоритма.
Команды алгоритма записываются последовательно, причем каждая – с новой
строчки. Если же несколько команд записываются на одной строчке, то они
отделяются друг от друга точкой с запятой - “ ; ” .   
Комментарии. В алгоритме “Ход конем” в строчках дано и надо после знака
“ | ” записаны комментарии. Комментарии записывают в конце нужной строчки
алг (алгоритм)
арг (аргумент)
рез (результат)
нач (начало)
кон (конец)
цел (целый)
вещ (вещественное)
сим (символьный)
лит (литерный)
лог (логический)
таб (таблица)
нц (начало цикла)
кц (конец цикла)
длин (длина)
дано
надо
если
то
иначе
все
пока
для 
от
до
знач
и
или
не
да
нет
при
выбор
ввод
вывод
54
после знака “ | ” , а если комментарий многострочный, то знак “|” ставится перед его
продолжением на каждой строке. При выполнении алгоритма компьютер
пренебрегает комментариями, словно их и нет вовсе, потому что комментарии не
подлежат выполнению – они предназначены лишь для облегчения понимания
смысла алгоритма.
Вызов команд. При выполнении алгоритма компьютер последовательно
отдает Роботу приказы выполнить команды, записанные в алго ритме. Каж дый
такой приказ исполнителю выполнить команду называется вызовом команды.
1. Что такое алгоритмический язык и для чего он предназначен?
2. Что такое служебные слова? Раскройте значение служебных слов алг,
нач, кон.
3. Измените алгоритм “Ход конем”, подобрав альтернативный маршрут.
4. Составьте алгоритм для перемещения Робота в заданной рабочей среде
из клетки А в клетку В.
ВСПОМОГАТЕЛЬНЫЕ АЛГОРИТМЫ
При составлении алгоритма решения очередной задачи можно восполь зо вать ся
ранее составленными алгоритмами. Алгоритмы, целиком использо ван ные в составе
других алгоритмов, называют вспомогательными. Алгоритм, в ко тором исполь -
зованы вспомогательные алгоритмы, при определенных условиях и сам может стать
5.2.
5. ПРОГРАММИРОВАНИЕ 55
56
вспомогательным для другого алгоритма. Использо ва ние ранее составленных
алгоритмов для составления новых широко приме ня ется в практике алго -
ритмизации. Прежде чем рассмотреть правила исполь зо вания вспомо га тельных
алгоритмов, ознакомимся еще с одним испол ни телем.
Исполнитель “Чертежник”. Чертежник может составлять ри сун ки, гра фи ки,
схемы на бесконечном поле. У Чертежника есть перо, кото рое  бывает  поднятым
или опущенным. Оно может перемещаться по плоскос ти. При пере ме щении пера
в опущенном состоянии остается след.  
Чертежник может выполнять 4 команды:
подними перо
опусти перо
переведи в точку (арг вещ x, y)
сдвинь на вектор (арг вещ a, b)
арг (аргумент) и вещ (вещественное) показывают, что у команд 
“переведи в точку”
и 
“сдвинь на вектор”
имеются аргументы, которые могут быть любыми действительными числами. Ар гу -
менты указываются при вызове команды, например: 
“переведи в точку (2.5, 0.5)”.
Команда “сдвинь на вектор”. Если перо Чертежника находится в точке 
(х, у), то по команде 
“сдвинь на вектор (a, b)”
оно перейдет в точку 
(х+а, y+b). 
Если a – положительное число, то движение будет направлено вправо, если
отрицательное – то влево. Точно так же, если b – положительное число, дви жение
будет направление вверх, а если отрицательное – вниз. Таким образом, если a и b
– положительные целые числа, то по команде 
“сдвинь на вектор (a, b)”
перо Чертежника передвинется на a клеток вправо и на b клеток вверх
Когда перо Чертежника опущено, при его передвижении из одной точки в
другую, от точки (x, y) до точки (х + a, y + b) чертится отрезок. Этот отрезок -
вектор с координатами  (a, b), перенесенный в  точку (x, y) – отсюда и наз вание
соответствующей команды. Например, если перо Чертежника опущено и
находится в точке (1, 2), то при выполнении команды “сдвинь на вектор 
(3, 3)” оно перейдет в точку (1 + 3, 2 + 3), то есть прочертит вектор из точки (1,
2) в точку (4, 5).
a)
б)
5. ПРОГРАММИРОВАНИЕ 57
58
При помощи Чертежника можно начертить любую фигуру, состоящую из
отрезков. Давайте составим алгоритм, согласно которому Чертежник может
изобразить на клеточном поле букву “М”. Если перо не установлено в исходное
положение, надо будет использовать команду “сдвинь на вектор”.
алг буква М
дано | перо поднято и находится в точке А
надо | чтобы Чертежник начертил букву М и 
| поднял перо
нач
опусти перо
сдвинь на вектор (0, 4)
сдвинь на вектор (1, -2)
сдвинь на вектор (1, 2)
сдвинь на вектор (0, -4)
подними перо
кон
Можно написать схожие алгоритмы и для вычерчивания других букв ал фа вита.
Допустим, что мы написали алгоритмы для вычерчивания букв  А, Л, П. Тогда
алгоритм для вычерчивания слова АЛП можно записать так::
алг слово АЛП
дано | перо поднято
надо | чтобы Чертежник начертил слово АЛП и 
| поднял перо
нач
буква А
буква Л
буква П
кон
В данном случае команды “буква А”, “буква Л”, “буква П” служат вспомо га -
тельными алгоритмами. Алгоритм  же “слово АЛП” – основной. 
Теперь рассмотрим такой алгоритм:
алг имя АЛПАЙ
дано | Перо поднято
надо | Написать слово АЛПАЙ 
| и поднять перо
нач
слово АЛП
буква А
буква Й
кон
В этом примере алгоритм “слово АЛП” относительно алгоритма “имя АЛПАЙ”
является вспомогательным алгоритмом, а относительно алгоритма “буква А” –
уже основным. 
1. Что такое вспомогательный алгоритм? 
2. Напишите для Робота алгоритм прохождения из точки А в точку В с
закрашиванием отмеченных на рисунке клеток.
5. ПРОГРАММИРОВАНИЕ 59
3. Изобразите результаты выполнения следующих алгоритмов:
а) 
алг тоннель
нач
квадрат(10); сдвинь на вектор (1, 1) 
квадрат(7); сдвинь на вектор (1, 1) 
квадрат(4); сдвинь на вектор (1, 1) 
квадрат(1); 
кон
алг квадрат (арг вещ а)
нач
опусти перо
сдвинь на вектор (а, 0)
сдвинь на вектор (0, а)
сдвинь на вектор (-а, 0)
сдвинь на вектор (0, -а)
подними перо
кон
б) 
алг спираль
нач
опусти перо
виток (1); виток (3); виток (5); 
виток (7); виток (9)
подними перо
кон
алг виток (арг вещ а)
нач
сдвинь на вектор (а, 0)
сдвинь на вектор (0, -а)
сдвинь на вектор (-а-1, 0)
сдвинь на вектор (0, а+1)
кон
4. Напишите алгоритмы вычерчивания букв А, Л, П.
60
ЦИКЛЫ
Рассмотрим  следующую задачу. Пусть требуется переместить Робота из
клетки А в клетку В.
Путь, который должен пройти Робот, можно разделить на пять одинаковых
частей. Если прохождение каждой такой части  записать в виде команд на одной
строке, то алгоритм решения данной задачи будет таким:
алг переход из клетки А в клетку В
дано | Робот находится в клетке А
надо | чтобы Робот оказался в клетке В
нач
вверх; вверх; вправо; вниз; вниз; вправо
вверх; вверх; вправо; вниз; вниз; вправо
вверх; вверх; вправо; вниз; вниз; вправо
вверх; вверх; вправо; вниз; вниз; вправо
вверх; вверх; вправо; вниз; вниз; вправо
кон
При составлении алгоритмов часто возникает необходимость много крат ного
повторения последовательности определенных команд. В этом случае для
упрощения записи алгоритма используют специальную команду алго ритмического
языка - цикл типа n раз.
Цикл типа n раз.  
Общий вид цикла типа n раз таков:
нц количество раз
тело цикла (последовательность команд) 
кц
Служебные слова нц (начало цикла) и кц (конец цикла) записываются одно под
другим и соединяются вертикальной чертой. Справа от этой черты записываются
повторяющиеся команды (тело цикла). При выполнении алгоритма после до -
5.3.
5. ПРОГРАММИРОВАНИЕ 61
вательность этих команд повторяется указанное коли че ство раз. Согласно
правилам алгоритмического языка, количество повторе ний может выражаться
любым целым числом. Другими словами, оно может равняться нулю или быть
отрицательным. Это не считается ошибкой – в этом случае тело цикла просто не
будет выполняться, и управление перейдет к команде, следующей сразу за кц. 
Теперь запишем приведенный выше алгоритм с использованием коман-
ды цикла:
алг переход из клетки А в клетку В
дано | Робот находится в клетке А.
надо | чтобы Робот оказался в клетке В.
нач
нц 5 раз
вверх; вверх; вправо; вниз; вниз; вправо
кц
кон
При использовании цикла n раз можно переместить Робота на сколько угодно
клеток в каком угодно направлении:
алг вверх (арг вещ n)
дано | на поле Робота нет стен.
надо | чтобы Робот переместился 
| на n клеток вверх.
нач
нц n раз
вверх
кц
кон
По этому же принципу можно составить алгоритмы “вниз (арг вещ n)”, “вправо
(арг вещ n)” и “влево (арг вещ n)”.
Рассмотрим следующий алгоритм:
алг закрась ряд (арг вещ m)
дано | на поле Робота нет стен.
| Робот находится в клетке А.
надо | чтобы Робот  последовательно закрасил
| m клеток справа от точки А 
| и вернулся в точку А.
62
нач
нц повторить m раз
закрась; вправо
кц
влево (m)
кон
При m = 4 Робот, исполнитель алгоритма “закрась ряд (4)”, вы полняет 12
команд:
закрась; вправо
закрась; вправо 
закрась; вправо 
закрась; вправо 
влево; влево; влево; влево
Вызов вспомогательных алгоритмов внутри цикла. К вспомо га -
тельным алгоритмам можно обращаться в любом месте основного алгоритма, в
том числе и внутри цикла. В приведенном ниже  алгоритме внутри цикла n раз
повторяется вспомогательный алгоритм 
“закрась ряд”
алг закрасить прямоугольник (арг вещ m, n)
дано | на поле Робота нет стен.
| Робот находится в клетке А.
надо | чтобы Робот закрасил прямоугольник
| размером m*n и вернулся в точку А.
нач 
нц повторить n раз
закрась ряд (m)
вниз
кц
вверх (n)
кон
5. ПРОГРАММИРОВАНИЕ 63
Цикл типа пока. В рассмотренных выше алгоритмах количество повторений
для команд, отдаваемых Роботу, было известно заранее. Однако зачастую заранее
не известно необходимое количество повторений в цикле. В этом случае
используется цикл типа пока. 
Общий вид цикла типа пока таков:
нц пока условие 
тело цикла (последовательность команд) 
кц
Составить такой цикл не так-то легко. Выглядящий кратким цикл типа пока
может включать довольно длинную последовательность операций. Во избежание
ошибок циклы типа пока нужно составлять пошагово:
1. Определить, когда цикл должен завершиться, то есть условие его окон -
чания, и записать после служебного слова пока противо по лож ное
условие, то есть условие продолжения цикла. 
64
2. Выяснить, что и как должно меняться в цикле и определить про ме жу -
точное состояние после нескольких повторений. 
3. Представить, что  должно произойти  после выполнения цикла  один раз
(его еще называют “шагом цикла”), то есть написать тело цикла.
4. Проверить, не является ли цикл бесконечным, то есть прокон тро ли -
ровать его завершение.
Рассмотрим  следующую задачу. Допустим,  Робот находится в клетке А -
крайней левой точке горизонтального коридора. Стена внизу коридора сплошная,
в стене вверху коридора имеется несколько проходов. Требуется составить
алгоритм, согласно которому Робот смог бы переместиться из клетки А в клетку В
таким образом, чтобы закрасить все клетки коридора. 
Если количество клеток коридора заранее неизвестно, то при написании
алгоритма не обойтись без цикла типа пока. 
Когда должен завершиться цикл? 
Когда Робот переместится в клетку В. 
Но чем отличается клетка В от остальных клеток коридора? 
Как видно из рисунка, под всеми клетками коридора проходит стена, и только
под клеткой В ее нет. Значит, после служебного слова пока следует ука зать
условие “внизу стена”. При выполнении каждого шага алгоритма Робот должен
закрашивать клетку, в которой находится, и перемещаться на следующую.  
алг закрасить коридор
дано | Робот находится в левом конце коридора.
надо | Робот должен достигнуть правого края коридора
| закрасив его клетки.
нач
нц пока внизу стена
закрась
вправо
кц
кон
5. ПРОГРАММИРОВАНИЕ 65
1. Какие существуют команды цикла? Сравните их. 
2. Что нужно уяснить для составления цикла типа пока?
3. Сколько клеток будет закрашено и сколько команд компьютер даст
Роботу после каждого из этих вызовов?
а) закрась прямоугольник (1, 1)
б) закрась прямоугольник (0, 11)
в) закрась прямоугольник (9, 0)
г) закрась прямоугольник (9, 11)
4. Робот находится в клетке А. Каким будет результат выполнения цикла
для двух случаев?
нц пока вверху нет стены
вправо
кц
5. Робот находится в прямоугольнике, огражденном стенами. Внутри
прямоугольника  других стен нет. Составьте алгоритм, согласно
которому Робот закрасит все клетки вдоль стен.
66
УСЛОВИЯ В АЛГОРИТМИЧЕСКОМ ЯЗЫКЕ.
ВЕТВЛЕНИЕ
Простые алгоритмы линейны – команды в них выполняются последо ва тель но,
в порядке их записи в алгоритме. Но, обычно, в реальной жизни  ли ней ные
алгоритмы, отображающие решение задач, встречаются крайне редко (в противном
случае жизнь стала бы невероятно скучной и убогой). 
Жизнен ные задачи гораздо более сложны, и для их решения требуются гибкие
алго ритмы, меняющие порядок выполнения команд в процессе реализации
алгоритма.
Выбор нужного порядка выполнения команд из нескольких возможных
вариантов при переходе к очередному шагу алгоритма достигается посред ством
ветвления.
Ветвление – одна из основных алгоритмических структур. Оно основано на
проверке одного или нескольких условий и выполнении определенных операций в
зависимости от того, какое из условий оказалось верным.  
В алгоритмическом языке структура ветвление реализуется с помощью команд
если и выбор.
Команда если
Общий вид команды если имеет вид:
Служебные слова если, то, иначе имеют тот же смысл, что и в обычном
языке, а слово все означает конец команды. Оно записывается прямо под сло вом
если и соединяется с ним вертикальной чертой. Между словами то и иначе
записывается в одну или в несколько строчек последовательность команд ал го -
ритмического языка (действия 1), между словами иначе и все – другая
последовательность команд (действия 2). Последовательности команд между
словами иначе и все (действия 2) может и не быть. 
При выполнении команды если компьютер проверяет условие, указанное
между словами если и то. Если условие удовлетворяется, то есть ответ “да”, то
выполняются действия 1. Если же условие не удовлетворяется, то есть ответ “нет”,
то выполняется последовательность команд, идущих после слова иначе – дей -
ствия 2 (если она есть).  
Если же условие не удовлетворяется и нет  слова иначе и идущих после него
действий, то компьютер переходит к  выполнению команд, следующих после слова
все.
если условие
то действия 1
иначе действия 2
всё
или: если условие
то действия 1
всё
5.4.
5. ПРОГРАММИРОВАНИЕ 67
а) блок-схема команды с двуальтернативным условием
б) блок-схема команды с одноальтернативным условием
Рассмотрим  следующую задачу. Робот находится в крайней левой точке го ри -
зонтального коридора. Стена внизу коридора сплошная, в стене ввер ху ко ридора
имеется несколько проходов. Требуется составить алгоритм, со глас но которому Робот
смог бы переместиться из клетки А в клетку В таким образом, чтобы закрасить  клетки
коридора, над которыми имеются про хо ды. Длина ко ридора, количество проходов и
порядок их расположения неизвестны.
Вспомним похожую задачу из пройденной темы. В ней требовалось закра сить
все клетки коридора. Эта задача отличается от предыдущей тем, что нуж но
закрашивать  только те клетки, над которыми имеются проходы. Дру ги ми словами,
68
если имеется над клеткой проход, то закрасить ее, в противном случае – нет. Для
записи этого на алгоритмическом языке воспользуемся командой условия:
если вверху пусто 
то закрась
все
При выполнении этой команды компьютер спрашивает у Робота: “вверху
пусто?”.  Если Робот отвечает “да”, то компьютер дает ему команду “закрась”. Если
же Робот отвечает “нет”, то перехода к команде “закрась” не происходит.
алг отметить проходы коридора
дано | Робот находится в крайней левой клетке коридора
надо | чтобы Робот достиг крайней правой клетки 
| коридора и закрасил те его клетки, 
| над которыми имеются проходы
нач
нц пока внизу стена
если вверху пусто
то закрась
всё
вправо
кц
кон
Условия в рассмотренных нами командах если и пока можно выразить одним
вопросом, например “Вверху пусто?” или “Внизу стена?” Условия, выраженные в
такой форме, называются простыми. 
Условия, в которых совместно применяются простые условия, служебные
слова и, или и не, а также скобки для указания последовательности проверки
условий, называются составными.
Например: 
• вверху пусто или слева пусто
• клетка закрашена и справа пусто
• х > 0 и у > 0
• не (х=0 и у=0)
Команда выбор. Как вы заметили, максимальное количество выбора
вариантов в команде если всего два. Однако если количество возможных вариан -
тов довольно велико, то использовать данную команду не целе со образно.
5. ПРОГРАММИРОВАНИЕ 69
Рассмотрим, к примеру, алгоритм оценки знаний учащихся:
если ответ отличный 
то оценка := 5
иначе
если ответ хороший
то оценка := 4
иначе
если ответ удовлетворительный
то оценка := 3
иначе
если ответ неудовлетворительный
то оценка := 2
все
все
все
все
Как можно заметить, в этом алгоритме несколько команд условного перехода
размещены одна внутри другой. При составлении  и прочтении такого алгоритма
возникают определенные сложности. Если же вариантов очень много, то работать
с таким алгоритмом становится весьма тяжело. На этот часто встречающийся
случай во всех языках программирования, в том числе и в школьном
алгоритмическом языке, предусмотрена более удобная команда. Это команда
выбор.
Общий вид команды выбор таков:
выбор
при усл 1: действия 1 
при усл 2: действия 2
...
при усл n: действия n
иначе действия n+1
все
Как и в случае с  командой если, здесь также может отсутствовать вариант
70
иначе. Используя команду выбор, можно записать вышеприведенный алгоритм
об оценке следующим образом: 
выбор
при ответ отличный : оценка := 5
при ответ хороший : оценка := 4
при ответ удовлетворительный : оценка := 3
при ответ неудовлетворительный : оценка := 2 
все
Можно заметить, что эта запись алгоритма короче и понятнее записи этого
алгоритма с командой если.
Блок-схема исполнения команды выбор
5. ПРОГРАММИРОВАНИЕ 71
Рассмотрим  еще одну задачу. Допустим, что Робот находится в клетке, у
которой нет хотя бы одной стены и требуется вывести Робота из этой клетки. Если
воспользоваться командой выбор, то  алгоритм решения этой задачи будет таким:
алг выход из клетки
дано | Робот находится в клетке, у которой нет 
| хотя бы одной стены
надо | вывести Робота из клетки
нач
выбор
при вверху пусто : вверх
при справа пусто : вправо 
при внизу пусто : вниз
при слева пусто : влево
все
Здесь указаны четыре условия для команды выбор и четыре действия,
соответствующие им. Но бывает, что при совпадении выполнимости несколь ких
условий выполняется только одно действие. Например, если при решении данной
задачи клетка ни с одной стороны не ограничена стеною, то есть от кры та со всех
сторон, то при выполнении вышеприведенного алгоритма будет выполнена только
первая по счету команда, то есть “вверх”.
1. Что такое ветвление? С помощью каких команд алгоритмического
языка оно выполняется?
2. В каких случаях удобнее использовать команду выбор?
3. Какую задачу решает  данный фрагмент алгоритма?
если а >= b
то c := а
иначе c := b
все
4. Допустим, переменная день отражает порядковый номер дня в
неделе. Используя команду выбор, составьте алгоритм опреде ле ния
названий дней недели соответственно номеру, указываемому
переменной день. 
72
ПЕРЕМЕННЫЕ ВЕЛИЧИНЫ В 
АЛГОРИТМИЧЕСКОМ ЯЗЫКЕ 
Рассмотрим следующую задачу. Допустим, что Робот, как показано на рисунке,
находится в точке А над  стеной, длина которой неизвестна. Требует ся переместить
Робота в точку B, находящуюся прямо под точкой А снизу от этой стены.
Не имея возможности “протаранить” стену, Робот вынужден двигаться вдоль
нее. Поэтому эту задачу можно решить так: если под  Роботом имеется стена, то он
перемещается вправо. Одновременно подсчитывается  количество пройденных
клеток. Когда стена закончится,  надо спустить Робота вниз и начать перемещать
влево. Вот здесь нам и понадобится информация о коли честве пройденных им
клеток. Если задать Роботу движение влево именно на такое число клеток, он
попадет как раз в клетку В. 
При составлении  этого алгоритма для компьютера требуется запоминать,
изменять и использовать соответствующую информацию (в нашем случае -
информацию о количестве шагов вправо). Для этого в алгоритмическом языке
используются переменные величины или просто переменные. 
Понятие переменной было заимствовано из математики и физики.  При состав -
лении алгоритмов, предназначенных для решения математических и физических
задач, переменные алгоритмического языка обычно соответст вуют матема -
тическим и физическим переменным величинам.   
Каждая переменная характеризуется именем, значением и типом. Имя пе -
ременной (например, n, m, d) – это обозначение величины в алгоритме. При
выполнении алгоритма каждая переменная либо может иметь значение, либо ее
значение не определено. Если значение переменной может быть только целым
числом, то это целая переменная (цел), если же любым числом, как целым, так и
дробным – то это действительная или вещественная переменная (вещ). Эта
характеристика (в данном случае – быть целой или вещественной переменной)
называется типом переменной. Существуют и другие типы переменных величин -
логический (лог), символьный (сим) и др.  
Описание переменной. Для того чтобы компьютер мог работать с пере мен -
ной, надо заранее указать ее имя и тип, например, цел n. Такое указание на зы -
вается описанием переменной. Описания переменных, используемых в про ме жу -
точных вычислениях, располагаются в строке непосредственно за словом нач. 
5.5.
5. ПРОГРАММИРОВАНИЕ 73
алг обогнуть стену
дано | Робот сверху от стены
надо | чтобы Робот оказался по другую сторону стены
нач цел n
Команда присваивания. Для сохранения или изменения  переменной в ал го -
ритмическом языке имеется специальная команда - команда присваивания. Общий
ее вид таков:
имя переменной := выражение
Знак “:=” называется знаком присваивания и читается как “присвоить”. На при -
мер, команда “n:=а” читается как “значение а присвоить переменной n”. При
выполнении команды присваивания компьютер сначала вычисляет значение
выражения в правой части, а затем переносит  полученное значение в то место
памяти, которое отведенно для переменной, стоящей в левой части команды
присваивания.
Составим алгоритм “обогнуть стену”, используя для количества пройден ных
вправо шагов целую переменную n.
алг обогнуть стену
дано | Робот сверху от стены.
надо | чтобы Робот оказался по другую сторону стены.
нач цел n
n := 0
нц пока внизу стена
вправо; n := n + 1
кц
вниз
влево (n)
кон
Проследим, как выполняется этот алгоритм. Сначала компьютер присва и вает
переменной n значение 0 (n := 0). Затем он дает Роботу команду “вправо” и
увеличивает значение n  на единицу (n := n+1). При каждом выполнении тела
алгоритма значение переменной n будет равно количеству сделанных Ро ботом
шагов вправо. Поэтому при выполнении вспомогательного алгоритма “вле во (n)”
компьютер n раз даст Роботу команду “влево”, в результате чего Робот
переместится точно в нужную клетку. 
74
Табличные величины. Секрет мощи компьютера – в высокой скорости его
работы и в огромной памяти. При выполнении всех приведенных здесь ал го ритмов
в память компьютера было заложено, в общем-то, ничтожное коли чество
информации – одно или несколько действительных (целых) чисел. Но как
поступить, если надо иметь дело с сотнями, тысячами, сотнями тысяч и более
чисел? Для написания алгоритмов, работающих с большими объемами
информации, в алгоритмическом языке предусмотрены специальные таблич ные
величины (табличные переменные), или просто таблицы.
Табличные переменные формируются из других переменных (обычно – целых
или действительных), которые называют элементами таблицы. Наиболее час то
используется такой тип таблиц, как линейные. Как и прочие переменные ве ли -
чины, линейные таблицы тоже занимают место в памяти компьютера и ха -
рактеризуются именем и типом.
Например:
цел таб k
Запись “цел таб k” означает, что величина k – табличная (таб) и состоит из
целых чисел (цел). Значение таблицы k составляют пять целых чисел: 9, 4, 0, -17
и 123.
Элементы таблицы не имеют отдельных имен. Для указания первого элемента
используется запись типа k [1]. Например, при выполнении команды
к [3] := к [2] + к [4]
значения второго и четвертого элементов таблицы k складываются (k [2] + k [4]) и
полученное значение присваивается третьему элементу этой таблицы.
m := 0 | количество положительных элементов
нц для i от 1 до n 
если a[i] > 0
то m := m + 1
все
кц
Вышеприведенный алгоритм предназначен для определения количества поло -
жительных элементов в  таблице a, состоящей из  n элементов, а ни жеследующий
– для нахождения наибольшего значения в таблице.
max := а[1]
нц для i от 2 до n 
если a[i] > max
то mах := а[i]
все
кц
значения элементов 9 4 0 -17 123
индексы элементов 1 2 3 4 5
5. ПРОГРАММИРОВАНИЕ 75
1. Значение переменной х равно 3. Чему оно будет равняться после
выполнения нижеследующей команды?
а) х := 5
б) х := х + 5
в) у := х
2. Каковы будут результаты следующих команд? 
а) а[2] := 0
б) b[2] := b[1] + 1   
в) c[3] := c[1] + c[2]  
3. Определите значение переменной s после выполнения следующих
команд.
4. Составьте алгоритм для подсчета суммы всех значений  элементов в
таблице.
5. Дана таблица а из n элементов.  Напишите алгоритм  нахождения но -
мера элемента таблицы,  значение которого равно х.
а) б)
i := 0
s := 0
нц пока i < 3
i := i + 1
s := s + i*i
кц
s := 0
нц для i от 1 до 3
s := s + i
нц для j от 2 до 3
s := s + j
кц
кц
76
5. ПРОГРАММИРОВАНИЕ 77
ВВОД И ВЫВОД ИНФОРМАЦИИ  
До сих пор при составлении алгоритмов мы предполагали, что компьютер
выполняет их автоматически, без вмешательства со стороны человека. Зачастую в
процессе выполнения алгоритма возникает необходимость в информационном
обмене между компьютером и человеком. Для этой цели в алгоритмическом языке
имеются команды ввода информации с клавиатуры в память компьютера и
команды вывода информации на экран (из памяти компьютера). Это команды
ввод и вывод. 
Так как в алгоритмическом языке для сохранения информации в компью тере
пользуются переменными, то в командах  ввод/вывод указывают  име на пере -
мен ных. 
Рассмотрим простой пример.
алг произведение
нач цел m, n
вывод “Введите два числа:”
ввод m, n
вывод нс, “Произведение чисел равно”, m*n
кон
Этот алгоритм будет выполняться в следующей последовательности:
1. Сначала на экране появится надпись “Введите два числа:”
2. По команде ввод m, n компьютер начнет ждать ввода с
клавиатуры двух чисел.
3. По команде (вывод нс “Произ ве дение чисел равно”, m*n)
компьютер вычислит произведе ние чисел и выведет его на экран
с новой строчки (нс – служебное слово). 
Команды  ввод и вывод. В команде ввод перечисляются имена пере мен -
ных через запятую. При выполнении этой команды компьютер ожидает ввода
пользователем (то есть набора на клавиатуре) соответствующих значений. Пос ле
завершения ввода компьютер присваивает эти значения перечисленным в ко манде
ввод переменным. Чтобы ввести в компьютер набранную на клавиа туре
информацию, следует нажать клавишу <Enter>. 
В команде вывод тексты, переменные, выражения отделяются друг от друга
запятой. При выполнении команды компьютер подсчитывает значения выражений
и отображает результаты на экране. Если информация не умещается на строке, она
переносится на следующую строку. Но можно перейти на следующую строку до
окончания текущей – для этого используется служебное слово нс.  
5.6.
Циклическая команда для. Допустим, требуется составить алгоритм,
предполагающий ввод целого числа n, а затем – вывод на экран квадратов первых n
натуральных чисел (от 1 до n). Для решения этой задачи можно использовать цикл
пока:
алг квадраты
нач цел n, i
вывод “Введите количество чисел:” 
ввод n
нц пока i <= n
вывод нс, i**2
i := i + 1
кц
кон
При выполнении этого алгоритма команда вывод нс, i**2 выполняется сначала
для i = 1, затем для i = 2, и т.д. После каждого вывода на экран значение i
увеличивается на единицу. В последний раз команда вывод выполняется для i = n.
В программировании широко распространено выполнение команд или серии
команд для значений в определенном диапазоне (в данном случае от 1 до n). Для
этого в алгоритмическом языке предусмотрена циклическая ко ман да для.
Используя ее, можно записать вышеприведенный алгоритм сле дую щим образом:
алг квадраты
нач цел n, i
вывод “Введите количество чисел:”
ввод n
нц для i от 1 до n
вывод нс, i**2
кц
кон
Общий вид цикла для таков:
нц для i от i1 до i2
тело цикла (последовательность команд)
кц
Здесь i1 и i2 - целые числа, переменные либо выражения, имеющие целое
значение. При выполнении цикла его тело выполняется при значениях i = i1, i =
i1+1, i = i1+2, … i = i2. Согласно правилам алгоритмического языка, i1 и i2 могут
быть целыми числами, причем i2 может быть и меньше i1 – это не счи тается
78
ошибкой, просто в этом случае тело цикла выполняться не будет и вы полнение
алгоритма продолжится непосредственно с команды, следующей за служебным
словом кц.
Алгоритм для подсчета факториала натурального числа n можно записать
следующим образом (напомним, что факториалом натурального числа n на зы -
вается произведение 1 · 2 · 3 · ... · n; факториал обозначается как n! Отме тим, что
по определению 1!= 1):
алг факториал (арг цел n)
дано | n >= 1
надо | f = 1 . 2 . 3 . ... . n
нач
f := 1
нц для k от 1 до n
f := f * k
кц
вывод n, ‘! = ’, f
кон
1. Какая команда алгоритмического языка используется для ввода данных
с клавиатуры в память компьютера?
2. В каком случае в алгоритмах применяется команда вывод?
3. Что появится на экране после выполнения команды вывод нс
“8-й”, “класс”?
4. Напишите алгоритм вывода на экран среднего арифметического двух
чисел, введенных с клавиатуры. 
5. Что появится на экране после выполнения следующей последо ва тель -
ности команд?
переведи в точку (0, 0).
опусти перо
нц для k от 1 до 3
сдвинь на вектор (k, 0)
сдвинь на вектор (0, - k) 
сдвинь на вектор (-k-1, 0) 
сдвинь на вектор (0, k+1)  
кц
6. Напишите алгоритм вычисления суммы n2 + (n+1)2 + … + (2n)2
5. ПРОГРАММИРОВАНИЕ 79
РЕЗУЛЬТАТЫ АЛГОРИТМОВ И АЛГОРИТМЫ-ФУНКЦИИ
Алгебраические выражения в алгоритмическом языке. В алгоритми -
че ском языке можно использовать не только числа, но и алгебраические выра же -
ния (формулы). Правила алгоритмического языка позволяют везде, где мож но
указать отдельные числа, указывать при необходимости и ариф ме ти ческие
выражения. 
Правила записи алгебраических выражений в алгоритмическом
языке. Алгебраические выражения в алгоритмическом языке  записываются в
строку, то есть имеют линейную форму. Правила этой записи таковы: 
• символы выражения записываются цепочкой - например, вместо “х1 и v0”
нужно писать “х1, v0” 
• для записи операции умножения используется звездочка (*), для записи
операции деления - наклонная черта (/), для записи операции возведения в
степень – две “звездочки” (**)
• знаки обозначения операций пропускать нельзя – например, произ -
ведение чисел 4 и  a нельзя записать как “4а” – только как “4*a”
• аргументы функций, как и аргументы вспомогательных алгоритмов, за -
пи сываются в круглых скобках – например, sqrt (x), max (xy). 
Таблица знаков операций и стандартных функций в алгоритмическом языке
Виды переменных в алгоритмическом языке. В алгоритмах исполь зует -
ся несколько видов величин. В алгоритме “факториал” переменная n, име нуемая
Действия, имена функций Форма записи
Сложение
Вычитание 
Умножение 
Деление
Возведение в степень
x + y
x - y
x * y
x / y
x ** y
Квадратный корень
Абсолютное значение
Знак числа
Минимум чисел x и y
Максимум чисел x и y
Остаток от  деления целых чисел  x на y
Частное от деления целых чисел  x на y
Целая часть вещественного числа x
sqrt (x)
abs (x)
sign (x)
min (x, y)
max (x, y)
mod (x, y)
div (x, y)
int (x)
5.7.
80
аргументом, служит для передачи информации от основного алгоритма к
вспомогательному. Но иногда возникает необходимость возвращения (пере дачи)
информации от вспомогательного алгоритма к основному, и для этого в
алгоритмическом языке предусмотрены результатные величины (результаты).
Рассмотрим простой алгоритм.
алг гипотенуза (арг вещ a, b, рез вещ c)
дано | длина катетов прямоугольного треугольника
| а ≥ 0 и b ≥ 0 
надо | найти c - длину гипотенузы этого треугольника        
нач
c := sqrt(а**2 + b**2)
кон
Здесь запись “рез вещ c” означает, что результатом (рез) выполнения дан но -
го алгоритма является действительная (вещественная) (вещ) переменная
величина с.
Выполнение алгоритма с результатами. При вызове вспомогатель но го
алгоритма в качестве его результатов указываются имена величин, значе ния
которых вычисляются в основном алгоритме. Например, для того чтобы най ти при
помощи основного алгоритма под названием  “вычисление” гипо те нузу x
прямоугольного треугольника с катетами p – 1 и p + 1, достаточно вызвать
вспомогательный алгоритм “гипотенуза”.
алг вычисление
нач вещ p, х
...
гипотенуза (p-1, p+1, х)
...
кон
Рассмотрим, как выполняется данный алгоритм. Допустим, что на момент
вызова вспомогательного алгоритма значение переменной p равно 7. 
При вызове 
“гипотенуза (p-1, p+1, х)” 
компьютер присваивает значения, соответствующие 
p - 1 = 6  и  p + 1 = 8
аргументам a и b вспомогательного алгоритма “гипотенуза”. Затем вы пол ня ется
сам алгоритм “гипотенуза” и подсчитывается значение переменной c:
c = sqrt (6**2 + 8**2) = 10
5. ПРОГРАММИРОВАНИЕ 81
По достижении строчки кон компьютер присваивает значение результата с
переменной х основного алгоритма “вычисление”: 
х = 10
После этого компьютер заканчивает выполнение вспомогательного ал го рит ма
“гипотенуза” и продолжает выполнение основного алгоритма “вы числение”.
Решение квадратного уравнения. 
алг квадра (арг вещ а, b, c, рез цел n, рез вещ х1, х2)
дано | а ≠ 0; a, b, c - коэффициенты квадратного уравнения
надо | найти n - количество различных корней, корни х1,
| х2 (если есть)
нач вещ d
d := b**2 - 4*а*c | дискриминант
если d < 0
то n := 0
иначе
если d = 0
то n := 1; х1 := -b/(2*а); х2 := х1
иначе
n := 2
х1 := (-b-sqrt(d))/(2*а)
х2 := (-b+sqrt(d))/(2*а)
все
все
кон
Общие правила выполнения команды вызова вспомогательного алгоритма
1. Перед началом выполнения вспомогательного алгоритма в памяти ком пью тера
отводится место для него и значения аргументов, указанные в команде вызова
основного алгоритма, присваиваются аргументам  вспомогатель ного алгоритма. 
2. На время выполнения вспомогательного алгоритма выполнение основного
алгоритма приостанавливается. 
3. После выполнения вспомогательного алгоритма значения его результатов
присваиваются величинам, указанным в команде вызова основного ал горитма.
После выполнения вспомогательный алгоритм полностью сти ра ется из памяти
компьютера (если он будет вызван снова, все повторится за ново: компьютер
отведет для него место в памяти, присвоит значения аргу ментам, и т.д.).
82
Алгоритмы-функции. Если в записи выраже ния необходимо указать ка кую-
либо функцию (см. таблицу функций выше), то необходимо записать наз вание
функции, а затем в скобках – ее аргумент. Например, квадратный ко рень из 13
записывается как sqrt (13).
В алгоритмическом языке можно создавать новые функции и использо вать их
в дальнейшем,  как стандартные. Для этого нужно задать алгоритмы вы числения
этих функций, или алгоритмы-функции.  
Алгоритм вычисления функции пишется по обычным правилам и от лича ется
от обычного алгоритма только формой записи заголовка алгоритма и особым
служебным словом знач. 
Допустим, в основном алгоритме требуется использовать функцию
Алгоритм для вычисления этой функции записывается следующим образом:
алг вещ s (арг вещ t)
нач
знач := t**2 / 2
кон
Служебное слово вещ перед “s” указывает на то, что значение функции s -
действительное (вещественное) число. Служебное слово знач используется в
алгоритме для указания значения функции. После выполнения алгоритма значение
этой величины становится значением функции. 
Выполнение алгоритма-функции. Проследим выполнение алгоритма-
функции на примере команды 
y := s(0.3)*1000
Запись в правой части этой команды s(0.3) указывает на то, что нужно выз вать
алгоритм-функцию s и вычислить его значение для аргумента t = 0.3. При
появлении в алгоритме алгоритма-функции компьютер отводит в памяти место для
него и запоминает значение аргумента. 
Тело алгоритма s состоит из одной команды:
знач := t**2 / 2
В соответствии с правилами алгоритмического языка компьютер заменяет
переменную t в правой части на ее значение 0.3, вычисляет выражение
0.3**2/2 = 0.09/2 = 0.045 
и присваивает полученное значение величине знач.
На этом выполнение алгоритма-функции s заканчивается. Компьютер под -
ставляет на место вызова s(0.3) в формуле s(0.3)*1000 значение 0.045, полу чен ное
5. ПРОГРАММИРОВАНИЕ 83
для величины знач, находящейся в последней строчке, и уничтожает в па мяти
место, отведенное для алгоритма-функции s.
Затем вычисляется 0.045*1000 = 45 и это значение присваивается y. На этом
вычисление “y := s (0.3)*1000” заканчивается.
1. Каковы правила записи алгебраических выражений в алгоритми ческом
языке?
2. Изложите правила выполнения команды вызова вспомогатель но го
алгоритма.
3. Чем отличается алгоритм-функция от обычного алгоритма?
4. Составьте следующие алгоритмы-функции:
а) найти наибольшее из трех чисел – a,b и c;
б) вычислить количество различных размещений трех чисел – a, b и c;
в) найти последнюю цифру целого числа n > 0;
г) найти первую цифру целого числа n > 0.
84
КОМПЬЮТЕРНЫЕ СЕТИ
С созданием электронно-вычислительных машин (ЭВМ) возникла не об хо ди -
мость создания взаимосвязей между ними с целью увеличения ско рости обработки
информации и экономии программных и аппаратных ресур сов. Созданные для
этих целей первые немногочисленные сети соединя ли круп ные ЭВМ с большими
вычислительными центрами. Настоящий “бум” на такие сети возник только после
появления персональных компьютеров, так как те очень быстро получили широкое
распространение. Компьютеры стали соединять локальными сетями, которые, в
свою очередь, соединялись друг с другом, а также с глобальной сетью. За по след -
ние 15-20 лет к сети присоеди нились сотни миллионов компьютеров, в результате
чего более миллиарда пользователей получили возможность связываться друг с
другом.
6.1.
6
КОММУНИКАЦИОННЫЕ
ТЕХНОЛОГИИ
Существует два основных вида компьютерных сетей: 
1)  локальная вычислительная сеть (local area network – LAN);
2)  глобальная вычислительная сеть (wide area network – WAN).
LAN объединяет компьютеры в пределах небольшой территории (напри мер,
одного здания). Такие сети удобны тем, что они делают доступными для каждого
пользователя ресурсы других компьютеров данной сети во время совместной
работы. Если бы не было локальных сетей, люди вынуждены бы ли бы постоянно
обмениваться дискетами или часто использовать принтер.
Общий вид компьютерной сети
Сеть. Ресурсы
Сеть (Network) – это группа компьютеров или других устройств, объединенных тем
или иным способом с целью обмена информацией и совместного исполь зования
ресурсов.
Ресурсы – это совместно используемые в сети программы, файлы, а также прин теры и
другие периферийные устройства.
86
Разумеется, для объединения компьютеров в сеть
требуется дополнительное оборудование. Важ -
нейшая составляющая аппаратного обеспе че ния
компьютерной сети – сетевой адаптер, или NIC
(Network Information Card). Его иногда назы вают
интернет-адаптером или сетевой картой. Он
может быть и отдельной картой, и элементом
материнской платы компьютера.
Для подсоединения оборудования сети (компью -
те ров и других устройств) используется сетевой
кабель, посредством которого компьютеры и цен -
тральное устройство обмениваются сигналами.
При создании компьютерной сети огромное
значение имеет топология, то есть схема расположения сетевых устройств и
прокладываемого кабеля. Выбирать топологию следует таким образом, что бы сеть
была надежной и рациональной, чтобы было удобно управлять пото ком данных в
ней. Существует три основных типа топологии сетей. Рас смотрим их подробнее. 
“Шина” (Bus). Такой тип топологии предполагает, что все компьютеры сети
соединены одним кабелем.
В подобной сети данные рассылаются одновременно всем компьютерам.
Каждый компьютер проверяет поступающую информации, и если она адресована
ему, то принимает ее и обрабатывает. Топологию “шина” иногда называют также
линейной (line).
Компьютеры можно соединять друг с другом для  обмена информацией между ними  и
для совместного использования устройств, подключенных к какому-либо из них.
Соединенные таким образом два (и более) компьютера образуют компьютерную сеть. Их
может объединять как обычная телефонная линия, так и  сложная спутниковая связь.
876. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
Это очень простой и наиболее экономичный тип топологии, так как он тре бует
наименьшего расхода кабеля. Вместе с тем у него имеется ряд не дос тат ков. Если
какая-то часть такой сети выходит из строя, то перестает рабо тать вся сеть. По этой
причине топология “шина”, которая была очень попу ляр на около десяти лет назад,
ныне при установке сетей практически не ис пользуется.
“Кольцо” (Ring). При такой топологии каждый компьютер так соединяется с
двумя соседними, чтобы иметь возможность получать информацию от одного из них
и передавать ее другому. Последний компьютер соединяется с первым – 
и кольцо замыкается.
У этого типа топологии, как и у предыдущего, недостатки также пере ве ши вают
достоинства. Например, в подобных сетях сложно обна руживать не исправности.
Кроме того, выход из строя одного компьютера оказывает влияние на соединенные
с ним компьютеры и далее – на всю сеть. Поэтому бывшие одно время очень
популярными сети типа “кольцо” сейчас встре чают ся очень редко.
“Звезда” (Star). Этот тип топологии, который появился на заре развития вы -
числительной техники, предполагает, что компьютер каждого пользова те ля сети
подключен к наиболее мощному центральному компьютеру.
При такой конфигурации весь поток данных идет через центральный ком пьютер,
который отвечает за управление обменом информацией между всеми элементами
сети. У сетей с таким типом топологии тоже есть недостатки. Так, центральный
88
компьютер несет такую огромную на грузку, что уже не
может выполнять почти никакую другую работу, кроме
обслуживания сети, а в случае вы хода его из строя
парализуется вся сеть. Сети та кого типа сейчас также
встречаются крайне редко.
Теперь ознакомимся подробнее с принципами связи
между компьютерами в сети.
Для общения друг с другом люди часто исполь зуют
устную речь. Но такая форма общения удобна толь ко в
том случае, если собеседники находятся рядом друг с
другом. Представьте теперь, что вам нужно послать
письмо другу, живущему в другом городе, а то и в
другой стране. Тут уже не обойтись без цело го ряда
действий: придется изложить информацию на бумаге,
подписаться, вложить лист в конверт, надписать на
конверте адреса отправителя и полу чателя, наклеить
марку и, наконец, отдать письмо почтальону (или
бросить в почтовый ящик). Даль нейшая судьба письма
зависит уже не от вас, а от почтовой службы. Поездом,
кораблем, самоле том или другим видом транспорта оно
будет доставлено в ту страну, в тот город, где живет
ваш друг. Там оно поступит в почтовое отделение, а от -
ту да – в почтовый ящик адресата. И лишь тогда по лу -
ча тель, то есть ваш друг, сможет открыть конверт и
про читать вашу информацию. Причем при воз ник -
новении проблем на том или ином этапе достав ки
(например, при отсутствии почтальона или в связи с
различием правил написания адреса в разных странах) письмо может и вовсе не
добраться до адресата. 
Компьютеры в сети не могут непосредственно общаться между собой - они
пока еще не научились “говорить” напрямую друг с другом, поэтому для об ще ния
им необходимо выполнение целого ряда последовательных проце дур, которые
именуются сетевым протоколом.
Протокол
Протокол – это набор правил и процедур, упорядочивающих взаимные связи
компьютеров в сети.  
896. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
• В наши дни наи боль шее
распространение
получила гибридная то -
пология «Звезда -
шина» (Star Bus).
• Существуют и другие
типологии, основанные
на сочетании основных
типологий: 
«дерево»
(Tree)
«петля»
(Mesh)
«полное
соединение»
(Fully
Connected)
90
1. Что такое компьютерная сеть?
2. Какой аппарат требуется для создания компьютерной сети?
3. Назовите виды компьютерных сетей.
4. Что такое сетевой протокол?
5. Что такое топология сетей и каковы ее основные типы?
При соединении компьютеров друг с другом при помощи телефонной линии ис поль -
зуется устройство, которое называется модем. В телефонной системе, в отличие от
компьютера, данные имеют не цифровую, а аналоговую форму. Модем передаю ще го ком -
пьютера преобразует пересылаемые с помощью телефонной линии данные в ана логовую
форму, а модем принимающего компьютера, приняв аналоговый сигнал, преобразует его
обратно в цифровую форму и передает в компьютер.    
ИНТЕРНЕТ
Сейчас, наверняка, не найдется человека, который не слышал бы об Ин тер нете.
Вы, возможно, пользуетесь им для какой-либо работы или в целях развлечения. В
последнее время Интернет развивается огромными темпами. В наши дни он,
можно сказать, целиком изменил компьютерный мир. Возмож но, в обозримом
будущем он коренным образом изменит и весь наш привыч ный жизненный уклад.   
Что такое Интернет и как он функционирует?
Интернет – самая крупная компьютерная сеть в мире. 
В разговорной речи Интернет часто именуют просто Net (Сеть) и пишут это
слово с прописной буквы. Однако Интернет – это не просто сеть. Это сеть сетей,
позволяющая людям свободно обмениваться информацией друг с другом.   
Согласно последним исследованиям Консорциума систем Интернет (Inter net
Systems Consortium) число компьютеров, подключенных к Интернету, на январь
2008 года составило 541 677 360. 
В наши дни люди, говоря об Интернете,
как правило, имеют в виду вы пол нение с
его помощью какой-либо работы, поиск в
нем чего-либо, возмож ность встретиться
благо даря ему с кем-либо … Миллионы
подклю ченных к Ин тернету компьютеров
ведут инфор ма цион ный обмен друг с
другом. Воз мож ности Интернета настолько
обшир ны, что для получения полного пред -
став ле ния о всех его службах не хватило
бы не только нескольких уроков, но и
нескольких книг. Так что ограничимся их
кратким пере числением.
Электронная почта (e-mail). На дан ный момент это наиболее распро стра -
нен ная служба связи. С ее помощью можно общаться с человеком вне за ви -
си мости от того, в какой точке земного шара он находится. Электрон ная поч -
та часто заменяет людям традиционную почту, а также телефон или факс. 
World Wide Web (WWW). Сегодня, говоря об Интернете, имеют в виду в
первую очередь именно web, хотя он – лишь одна из служб Интернета. В
отличие от первых появившихся служб Интернета, web объединил в се бе
такие элементы, как тексты, изображения, видеоклипы, анимацию, а так же
возможность распространения в эфире новостей и музыки. Число но вых
веб-сайтов  стремительно растет. 
Групповые дискуссии. С целью общения друг с другом на самые раз лич -
ные темы люди, находящиеся в разных точках земного шара, исполь зуют
чаты [chat room]. Беседа в чате может идти как между небольшими (или
6.2.
916. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
большими) коллективами, так и между двумя людьми. Широко исполь зу -
ются соответствующие службы (чаты) Yahoo! и Microsoft, созданные на
основе технологии Internet Relay Chat, а также www. 
Обмен мгновенными сообщениями. Если на вашем компьютере и на
компьютерах ваших друзей установлены соответствующие программы, вы
можете обмениваться мгновенными информационными сообщения ми.
Такие программы, как Windows Messenger, Yahoo Messenger и ICQ, поз -
воляют мгновенно выводить отправленное сообщение на экран по лучателя
(адресата). 
Чтобы получить доступ в Интернет, необходимо следующее:
1) компьютер с подсоединенным к нему модемом;
2) соответствующее программное обеспечение;
3) финансовые возможности для оплаты;
4) определение провайдера – поставщика, обеспечивающего 
услуги Интернета. 
Лучше всего подключиться к Интернету, оплатив соответствующие услуги
провайдера (от англ. provide – “обеспечивать”), так как он обеспечивает непо сред -
ствен ный выход в сеть, круглосуточную техническую поддержку и (при необ -
ходимости) обучение основам пользования Интернетом.
Провайдера сокращенно называют также ISP (Internet Service Provider – “обе -
спе чивающий услуги Интернета”) – произносится это как “ай-эс-пи”. Пе речислив
деньги провайдеру, пользователь может приобрести следующие услуги:
– выход в Интернет;
– электронную почту;
– поддержку.
Поскольку оборудование и программное обеспечение у всех провайдеров сход -
ное, то их возможности и предоставляемые услуги мало чем различаются –
отличие может наблюдаться только в расценках, ассортименте услуг и их качестве.
Простейший способ подключения к Интернету – при помощи телефонной ли -
нии. 
Посредством телефонной линии информацию можно пересылать двумя
способами, в зависимости от типа сигнала – аналогового (в виде звуковых волн)
или цифрового (в виде электрических частот). 
Поскольку данные в компьютере находятся в цифровой форме, то по ана ло -
говой телефонной линии они пересылаются при помощи устройства, име нуемого
модем (модулятор – демодулятор). Модем преобразует цифровые дан ные в
аналоговые сигналы, и наоборот, аналоговые сигналы – в цифровые данные. На
рисунке показано, каким образом два компьютера могут обме ниваться инфор -
мацией через Интернет.
92
В стационарных компьютерах используются модемы двух типов: внутрен ние и
внешние. Внутренний модем располагается внутри системного блока ком пью тера,
а внешний  подключается к одному из портов системного блока при помощи
кабеля.
Данные в
компьютере
находятся в
цифровой форме
Модем преобразует
цифровые данные в
аналоговые сигналы Информация
передается через
Интернет
Другой модем
преобразует
аналоговые
сигналы в
понятные для
компьютера
цифровые
сигналы
936. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
Модемы различаются также по скорости приема-передачи данных. Скорость
модема измеряется в битах в секунду (bps).
Для подключения к Интернету при помощи обычного модема (соединение dial-
up) следует подключить его  к телефонной линии. При таком способе выхода в
Интернет на протяжении всего сеанса соединения телефонная линия будет занята.
Высокоскоростной Интернет. Однако пользователей Интернет уже не
может устраивать медленная и не очень надежная связь, описанная выше. В
школы, в ВУЗы, в учереждения и к нам домой уже приходит высокоскоростной и
надежный Интернет. Его нам предоставляют новые технологии. Упомянем не -
которые из них:
ADSL (англ. Asymmetric Digital Subscriber Line – ассиметричная цифровая або -
нентская линия) – модемная технология, превращающая стандарт ные
телефонные линии в линии высокоскоростного доступа. По одной и той же
телефонной линии вы можете выходить в Интернет и одно вре мен но
разговаривать по телефону.
GPRS (англ. General Packet Radio Service – пакетная радиосвязь общего поль -
зования) – надстройка над технологией мобильной связи GSM, осу щес -
твляеющая пакетную передачу данных. GPRS позволяет пользо ва те лю сети
сотовой связи производить обмен данными с другими устройствами в сети
GSM и с внешними сетями, в том числе Интернет.
Оптоволоконная связь – средство связи на больших расстояниях, по -
строенное на основе волоконно-оптических линий связи. Скорость передачи
данных может измеряться сотнями гигабитов в секунду.
Беспроводной широкополосный Интернет. Не надо никаких линий.
Установил дома специальный модем, договорился с провайдером – и выходи
в Интернет.
Как работает модем?
Ваш модем подает сигнал, который «заявляет» о вашем компьютере тому ком пью теру, с
которым намеревается создать соединение, и тот компьютер подтверждает ва ши
полномочия для использования сети. Внешне этот процесс сопровождается гудением  и
писком модема.   
94
1. Что такое Интернет?
2. Какие службы Интернета вы знаете?
3. Что необходимо для подключения к Интернету?
4. Какие функции выполняет модем?
WWW
Именно World Wide Web (сокращенно – Web или Veb) сделал Интернет по пул -
яр ным. Изначально в Сети имелись только тексты, но с появление Web этот
“скучный” этап ее развития завершился: в Интернете появилась графика и другие
мультимедийные элементы.
6.3.
Час пик
Когда одновременно с вами в Сети находится огромное количество людей, скорость
загрузки веб-страниц снижается. Интернет в этом смысле похож на дорожную трассу –
когда на ней слишком много автомобилей, движение замедляется. Так и в Интернете: чем
больше в нем на данный момент отправителей и получателей информации, тем ниже
скорость ее передачи.     
Для приема или передачи большого объема данных лучше выходить в Сеть поздней
ночью или ранним утром, когда там малолюдно.
956. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
96
Интернет превратился во Всемирную “паутину” миллионов Wеb-серверов,
рассеянных по всему миру. 
Web-сервер – это программа, которая использует протокол HTTP (HyperText
Transfer Protocol) для передачи данных с подключенного к Сети компьютера.
Для облегчения создания, хранения и размещения во Всемирной паутине
гипертекста традиционно применяется язык
HTML [HyperText  Markup Language]. 
Гипертекст, подготовленный на языке HTML, записывается в файл. HTML-
файлы – наиболее распространенные Интернет-ресурсы. HTML-файл, разме щенный
на web-сервере, называется web-страницей. Совокупность взаимосвя занных  web-
страниц называется web-сайтом.
Каждая web-страница имеет свой URL-адрес. Он определяет официальное
название того или иного Интернет-ресурса и состоит из двух частей. Первая – это
идентификатор ресурса, вторая указывает местонахождение ресурса. Ти пичный
URL-адрес выглядит так:
http://www.azerbaijan.az/_Sosiety/_Education/_education_a.html.
Первая часть адреса – 
http://
– идентификатор ресурса, или просто идентификатор. Он информирует брау зер о
том, какой протокол или язык использовался при создании данного ресурса.
Web-сайт
Web-сайт (web-site) – это совокупность web-страниц, тесно связанных
между собой по тематике и (или) принадлежащих какой-либо компании,
группе или отдельному человеку.
Web-браузер. Гипертекст
Для просмотра на пользовательском компьютере полученной с web-сервера ин форма ции
используется специальная программа – web-браузер. Основная функция web-брау зера
отображать гипертекст, потому что большинство информации в Web пред став ляет собой
именно гипертекст. Гипертекст – это текст, с которого можно перейти на другой текст или
объект.  
Вторая часть URL-адреса отражает местонахождение ресурса (в данном случае –
web-страницы). Для того чтобы лучше понять ее смысл, проще разделить ее, в свою
очередь, еще на две части:
– первая часть (www.azerbaijan.az) – это доменное имя компьютера, то есть
имя главного компьютера (все компьютеры в Сети имеют соб ственные
имена, позволяющие отличать один от другого); 
– вторая часть (/_Sosiety/_Education/_education_a.html) – это название от -
дельно взятого web-ресурса. 
Для того чтобы путешествовать по Всемирной паутине, необходимо осо бое
программное обеспечение, а точнее – web-браузер, или просто браузер (от англ. to
browse – “просматривать”). Наиболее известный из браузеров – Microsoft Internet
Explorer (IE). Помимо него, имеются такие браузеры, как Netscape Navigator,
Mozilla, Opera, Safari.
976. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
Чтобы  начать работать с Internet Explorer, дважды щелкните на его иконке на
Рабочем столе. На экране откроется окно 
Internet Explorer.
Адреса просмотренных  страниц сохраняются в   
Адресной строке (Adress bar).
Туда же вводится и адрес страницы, которую требуется открыть.
Окно браузера Internet Explorer
Web -страницаПанель инструментовАдресная строка
98
Тексты и иллюстрации на web-странице располагаются примерно так же, как
на обычной странице – например, журнальной. На некоторых  web-стра ни цах
имеются “живые” изображения, а некоторые страницы открываются под
музыкальное сопровождение (оно порой раздражает).
Как найти информацию в Сети? 
Для этой цели служат поисковые системы (Search Service). Поисковые системы
– это особые web-страницы, состоящие из гигантских каталогов web-сайтов, в
которых можно найти что угодно. Одна из них (лучшая, но далеко не единственная)
расположена по адресу www.google.com (или www.google.az).
1. Что такое web-сервер и web-браузер?
2. Для чего используется web-браузер?
3. Что такое web-сайт?
4. Что такое URL-адрес и из каких элементов он состоит?
Поисковая система Адрес
Аsk Jееvеs  www.аsk.cом 
Rамbler www.rаmbler.ru 
Yаhоо!  www.yаhоо.cоm
Аport  www.aport.ru
Первый web -сайт
Первый в мире web-сайт был представлен общественности  6 августа 1991 года. Его соз -
датель Тим Бернерс-Ли опубликовал на нем новую технологию WWW, ос но ван ную на
протоколе передаче данных  HTTP, системе URL-адресов и языке разметки гипертекста
HTML. На сайте также были приведены принципы действия и правила установки web -
серверов и web-браузеров. Впоследствии Тим Бернерс-Ли разместил на этом сайте
список ссылок на другие сайты, так что этот сайт стал к тому же первым в мире
Интернет-каталогом.
996. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
100
Маршрутизатор
Отправитель составляет
сообщение электронной
почты на своем компьютере.
1
Указывается  адрес
электронного почтового ящика,
на который отсылается письмо. 
2
Посылает
информацию на
компь ютер, подклю -
ченный к Интернету.
3
Маршрутизаторы
связаны между собой
телефонными линиями
и кабелями
ЭЛЕКТРОННАЯ ПОЧТА
Электронная почта — широко распространенная и
самая популярная служба Интернета. Принцип
работы электронной почты интуитивно понятен
тем, кто пользовался обычной почтой. В сети
имеется хост-компьютер, который  сортирует
письма, рассылает их по почтовым отделениям и
принимает корреспонденцию из этих отделений.
Его можно сравнить с центральным почтамтом.  
Каждый абонент почтового отделения имеет собственный почтовый ящик, куда
отправляется вся адресованная ему корреспонденция. Роль ключа от почтового
ящика выполняет сетевой пароль. 
Основные преимущества электронной почты – ее оперативность и высокое ка че -
ство связи. Скорость доставки, круглосуточный режим работы, возможность
массовой рассылки одной и той же информации, сохранение полученной
корреспонденции на хост-компьютере на протяжении какого угодно периода
времени по желанию пользователя, и многое другое отличает электронную почту
от обычной.
6.4.
Для отправки и получения писем посредством этой службы нужен элек трон -
ный почтовый адрес. Этот адрес, присваиваемый каждому пользователю, уникален
(то есть аналогичного не может быть ни у кого другого) и выглядит примерно так: 
соmеbоdy@соmеwhеrе.cом
101
Хост-компьютер отправляет
электронную почту одному из
маршрутизаторов (router), а тот –
на следующий. 
4
Нужный маршрутизатор  пере -
правляет  почту  на хост-
компьютер, к которому
подсоединяется ком пью тер
получателя, и помещает письмо в
электронный почтовый ящик.
6
Получатель читает письмо в своем
электронном почтовом ящике.
7
6. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
• Маршрутизаторы связаны
между собой телефонными
линиями и кабелями.
Прежде чем дойти до
адресата, сообщение
электронной почты может
обойти полсвета. 
• Если маршрутизатор
перегружен или
неисправен, почта
передается посредством
другого, нормально
работающего
маршрутизатора.
Информация передается от
одного маршрутизатора  к
другому, пока не достигнет
цели. 
5
Первая его часть (“somebody”) — это имя пользователя. Оно может быть
выбрано вами лично, а может быть предложено вам провайдером. Символ “@“ ( а
с хвостиком) отделяет имя пользователя от доменного имени.   
Доменное имя (“somewhere.com”) – это имя центрального компьютера вашего
провайдера. Сочетание имени пользователя и имени почтового серве ра провайдера
представляет собой точный адрес для отправки корреспон денции.
Люди веками искали, а затем использовали различные пути обмена ин фор -
мацией, но ни один из этих способов не сравнится по скорости и надеж ности с
электронной почтой.
В древности одним из способов передачи наи -
бо лее важной информации был дым сиг наль ных
костров. В 1588 году весть о приб лижении
испанского флота к берегам Англии была
передана по “огненной цепочке” с одного конца
страны на другой всего за 18 минут! Однако в
пасмурную, сырую погоду костер как средство
связи ненадежен.
Письма доставляли пешие или конные гон цы.
Широко известен случай, когда в 490 г. до н.э.
после Марафонской битвы воин по имени Фи дип -
пид пробежал, не останавливаясь, дистан цию в 40
км, чтобы донести до Афин весть о победе греков.
Произнеся слова “Ликуйте! Мы победили”, он
замертво рухнул на землю.
В Древней Греции сообщения отправляли с
почтовыми глубями, привязывая записку к лапке
птицы. Именно так, например, рассылались из Афин известия об итогах
Олимпийских игр. Сообщение доходило за два-три часа (если голубь не погибал и
не сбивался с курса).   
В I веке н. э. в Китае, Иране и Римской империи появились почтовые службы.
Сообщения, записанные на свитках, переправляли конным путем или водным
транспортом. Такая доставка на большие расстояния занимала порой целые
недели. Почтовая служба работала только для государственных долж ност ных лиц.
Частные лица не имели права ею пользоваться, но большинству из них это было и
не нужно по причине их неграмотности. 
Первая общественная почтовая служба была создана в 1464 году фран цузским
королем Людовиком XI. Письма доставляли конные гонцы. Позднее для защиты от
разбойников стали использовать охраняемые почтовые кареты. К XVII веку в
Англии похищения корреспонденции достигли такого размаха, что люди
вынуждены были для подстраховки разрезать письма надвое и каждую половинку
посылать отдельно. 
102
В XIX веке доставка почты стала вестись по железной дороге, и стоимость
почтовых услуг сильно снизилась. В 1918 году открылся первый почтовый
авиарейс Вашингтон – Нью-Йорк. Письма и посылки доставлялись из одного
города в другой за два дня. 
В 1837 году был изобретен телеграф, позволяющий быстро передавать ин фор -
мацию на огромные расстояния при помощи азбуки Морзе. 
В 1866 году по дну Атлантического океана был проложен кабель, соеди нив ший
Европу с Америкой. Письма, отправленные этим же путем паро хо дами, доходили
до адресатов за 11 дней, телеграфные же сообщения - за счи тан ные минуты. 
Первое сообщение  электронной почты было отправлено в 1971 году, с 1980 года
начался обмен электронной информацией между учреждениями и универ ситетами, а
с 1990 года электронная почта распространилась по всему миру.
1. Чем отличается обычная почта от электронной?
2. Что должен сделать пользователь, чтобы отправить письмо по
Интернету?
3. Создайте свой электронный почтовый ящик (если имеется такая
возможность) и отправьте краткое письмо другу.
1036. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
ПРОГРАММА OUTLOOK EXPRESS
Помимо web-браузера в стандартном пакете Windows XP есть почтовая
программа – Outlook Express.
Чтобы запустить программу Outlook Express, надо произвести двой ной
щелчок мышью по ее значку на Рабочем столе.  
Если соединение с Интернетом на данный момент отсутствует, программа
Outlook Express после запуска сама наладит подключение к нему. 
При запуске программа Outlook Express в первую очередь проверяет нали чие
новых сообщений. Ее окно состоит из трех панелей:
1) Список папок; 2) Контакты; 3) Задания.
Окно Outlook Express
Папки (Folders). В левом верхнем углу окна программы располага ется
список папок отправленных, принятых, удаленных и других сообщений.
6.5.
104
Контакты (Contacts). В левом нижнем углу программы располагается спи -
сок контактов – адресов людей, с которыми вы переписываетесь.
Сведения о сообщениях. Справа располагается “домашняя страница”,
отражающая сообщения, группы новостей и пр. Outlook можно настроить таким
образом, чтобы при запуске сразу открывать папку Входящие (Inbox). Для этого
нужно выбрать команды
Сервис (Tools)  Свойства (Options)
и в открывшемся диалоговом окне выбрать команду:
При запуске сразу открывать папку Входящие
(When starting go directly to my 'Inbox-folder)  
Главное окно Outlook Express само по себе малоинформативно. Чтобы
просмотреть недавно полученные, а также свежие  сообщения,  нужно щелкнуть
на строчке Входящие (Inbox), и тогда правая часть окна разделится на две области.
Правая и левая, а также верхняя и нижняя части окна заключены в рамки.
Наведя курсор на рамку, ее можно передвигать, увеличивая или уменьшая таким
образом эту часть окна. 
Для упорядочивания (сортировки) электронной почты служит панель Пап ки
(Folders) программы Outlook Express. В ней имеется пять стандартных папок:
– Входящие (Inbox). Здесь хранятся письма, которые вы еще не про чи тали,
а также те, которые вы уже прочитали, но еще не удалили (или еще не
поместили в другие папки).
– Исходящие (Outbox). В этой папке содержатся пока не отправленные
вами письма.
– Отправленные (Send items). Здесь хранятся уже отправленные вами письма.
– Удаленные (Deleted items). В эту папке сохраняются удаленные вами
письма.
– Черновики (Drafts). В этой папке содержатся письма, которые вы пока не
собираетесь отправлять.
Чтобы отправить письмо, сначала нужно щелкнуть на кнопке Создать
сообщение (Creat mail) . Откроется окно Новое сообщение (New Message), в
котором следует ввести необходимый текст.
В поле Кому (To) указывается электронный адрес получателя письма.
В поле Копия (Cc) указывается адрес человека (или адреса сразу нескольких
людей), которому вы хотели бы отправить копию этого письма (если вам необ ходимо
такое сделать). Однако стоит помнить, что каждый получатель такого письма-копии
будет автоматически извещен о том, что данное письмо было на правлено не только
ему.
1056. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
106
В поле Тема (Subject) дается краткое описание содержания письма. Оно
должно как можно более точно достоверно отображать содержание, так как
именно тему письма получатель увидит, прежде всего, в папке Входящие, причем
точно в таком виде, в каком ее задал отправитель.
Создание нового сообщения в программе Outlook Express 
Не забудьте написать текст письма! Для проверки орфографии текста нужно
щелкнуть на кнопке Правописание (ABC spelling) . Система про вер ки ор фо -
графии выделяет “сомнительные” слова в тексте, после чего поль зо ва телю
остается только выбрать нужный вариант данного слова в открыв шем ся
диалоговом окне (точно так же, как это делается в текстовом редакторе).
И вот сообщение готово, остается только отправить его. Щелкните на кнопке
Отправить (Send) – и письмо уйдет адресату.
Если же вы по какой-то причине передумали отправлять уже написанное
письмо, просто закройте окно Создать сообщение (New Message). При этом про -
грамма спросит у вас, нужно ли сохранить данное сообщение. Если вы ответите Да
(Yes), то письмо будет сохранено в папке Черновики (Drafts), если Нет (No), то
письмо будет удалено.
107
Для прочтения полученного письма выберите его в папке Входящие (Inbox).
Текст письма откроется в правой части окна.
Для того чтобы распечатать текст, нужно либо выбрать команду Файл (File) 
Печать (Print), либо щелкнуть на кнопке Печать (Print) на панели ин -
струментов.
Чтобы ответить на полученное письмо, нужно щелкнуть на кнопке Отве тить
(Replay) , и тогда программа Outlook Express автоматически выпол нит ряд
действий:
1. Впишет адрес получателя в поле Кому (To).
2. Сделает перед исходной темой оригинала (присланного письма) в поле
Тема (Subject) пометку Ответ (Re:).  
3. Процитирует текст оригинала (это удобно для напоминания о пред мете
переписки).
Написав текст ответа в данном окне, нужно щелкнуть на кнопке От пра вить
(Send).
Если требуется отправить полученное вами письмо третьему лицу, нужно
щелкнуть на кнопке Переслать (Forward) . В открывшемся окне появится
копия оригинала (присланного письма), которую вы при желании можете
дополнить собственными комментариями. Для того чтобы послать это письмо,
нужно щелкнуть на кнопке Отправить (Send).
Создание нового сообщения. 
Проверка орфографии. 
Папка Черновики (Drafts)
• Для создания нового сообщения выберите команду 
File  Nеw  Мail Меssаgе  
или комбинацию клавиш
<Ctrl+N> 
• Программа проверки орфографии работает только в том случае, если на компьютере
установлена программа Word либо пакет Microsoft Office. 
• Если вы решили отправить одно из писем, находящихся в папке Черновики (Drafts),
дваж ды щелкните сначала на самой этой папке, а затем – на нужном письме в ней. По -
сле чего это письмо можно будет отредактировать и послать адресату, щелкнув на кноп -
ке Отправить (Send).
6. КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
108
Для того чтобы удалить письмо, нужно щелкнуть на кнопке Удалить (Delete)
. При этом письмо перемещается в папку Удаленные (Deleted items).
Для того чтобы одновременно отправить ответ на письмо не только его автору,
но и целому ряду других адресатов, нужно щелкнуть на кнопке Ответить всем
(Replay All) .
1. Какие почтовые программы используются в Windows XP?
2. Что нужно сделать, чтобы просмотреть полученные электронные
письма?
3. Проверьте свой электронный почтовый ящик при помощи программы
Outlook Express и пошлите кому-нибудь письмо.
Смайлики
Для указания в письме некоторых эмоций в электронной переписке пользуются смай ли -
ками (от англ. smile – «улыбка») – стилизованными изображениями человеческого лица.
Для этого обычные печатные символы рассматриваются под углом в 90°:    
:-) – радость;   
;-) – подмигивание;
:-( – грусть; 
:-P – высунутый язык;
:-D – смех; 
:-O – удивление. 
ПЕРЕВОД ЧИСЕЛ ИЗ ОДНОЙ СИСТЕМЫ
СЧИСЛЕНИЯ В ДРУГУЮ ПРИ ПОМОЩИ
ПРОГРАММЫ КАЛЬКУЛЯТОР
Цель работы:  научиться переводить целые числа из десятичной сис те -
мы счисления в двоичную и наоборот при помощи программы Калькулятор.
Вы уже научились переводить числа из десятичной системы счисления
в двоичную, восьмеричную и шестнадцатеричную системы счисления. Но
подобные вычисления подчас отнимают много времени. Каким образом
облегчить эту работу? Для этого можно использовать программу Кальку ля -
тор операционной системы Windows.
Практическая работа №1.
7
ПРАКТИКУМ
Чтобы запустить программу Калькулятор, надо открыть меню Пуск (Start)
и выбрать в нем последовательно команды Программы (All Programs) ⇒
Стандартные (Accsessories) ⇒ Калькулятор (Calculator). После запуска
программы появится ее окно.
Для того чтобы перевести окно программы из вида Стандартный
(Standart) в вид Инженерный (Scientific), нужно из основного меню  выбрать
команду  Вид-Инженерный (View-Scientific). Калькулятор “расширится”, и на
нем возникнут дополнительные кнопки.
Обратите внимание на эту группу кнопок:
110
Bin – означает двоичную систему счисления; при выборе этой кнопки
на числовой панели Калькулятора будут активны только две
кнопки – “1” и “0”.
Оct – означает восьмеричную систему счисления; в этом режиме мож -
но использовать цифры от 0 до 7.
Dec – означает десятичную систему счисления; в этом режиме мож -
но использовать цифры от 0 до 9.
Hex – означает шестнадцатеричную систему счисления; в этом ре жи -
ме можно использовать цифры от 0 до 9 и буквы от “A” до “F”.
По умолчанию исходной задается десятичная система счисления (Dec). 
Для перевода числа из десятичной системы счисления в двоичную нужно:
1. Щелкая на кнопках Калькулятора (или же посредством  клавиш кла -
ви атуры) ввести в пустой строке нужное число – например, “278”. 
2. Щелкнуть на кнопке Bin. Появится изображение заданного числа в двоич -
ной системе счисления.
Значит, 27810=1000101102.
1117. ПРАКТИКУМ
Используя программу Калькулятор, переведите числа 567, 346, 11, 89,
333 в двоичную и восьмеричную системы счисления.
СОЗДАНИЕ БЛОК-СХЕМ 
В ПРОГРАММЕ PAINT
Цель работы: научиться чертить простейшие блок-схемы в программе Paint.
Как вы знаете, для изображения в программе Paint простых фигур,
вроде прямоугольника или овала, используются соответствующие инстру -
менты и .
Помимо этого, в блок-схемах используются параллелограммы (блок
ввода и вывода переменных) и ромбы (блок проверки условий).
Для того чтобы начертить параллелограмм, нужно:
1. Взяв инструмент Линия , выбрать в открывшемся меню настройки
толщину линии.
2. Нарисовать прямоугольник.
Практическая работа №2.
ЗАДАНИЕ
112
3. Выделить прямоугольник при помощи инструмента Выделение (Select) .
4. Выбрать команду
Рисунок (Image) ⇒ Растянуть/Наклонить… (Stretch/Skew…)
5. В открывшемся окне, в разделе Наклонить (Skew), в поле По горизонтали
(Horizontal) ввести 20 и щелкнуть на кнопке ОК.
Прямоугольник превратится в параллелограмм.
1137. ПРАКТИКУМ
114
Для того чтобы начертить ромб, нужно: 
1. Начертить отрезок, как показано на рисунке.
2. Взяв инструмент Выделение (Select) и удерживая нажатой кла -
вишу Ctrl, скопировать его. 
3. Выбрать команду Рисунок (Image) ⇒ Отразить/Повернуть… 
(Flip /Rotate…).
4. В открывшемся окне выбрать Отразить слева направо (Flip hori-
zontal) и щелкнуть на кнопке ОК. 
5. Соединить концы двух отрезков – первоначального и вновь полу ченного. 
6. Чтобы убрать фон, на котором располагается фигура, нужно, взяв ин -
струмент Выделение (Select), выбрать в меню настройки нижний из
двух рисунков.
7. Скопировать полученную фигуру. Затем в окне
Отразить/Повернуть… (Flip /Rotate…) выбрать 
Отразить сверху вниз (Flip vertical).
8. Соединить половинки ромба в целое. 
1157. ПРАКТИКУМ
Начертите в программе Paint блок-схему алгоритма для вычисления
большего из двух чисел
При наборе текста используйте шрифт Times New Roman, 12 pt.
ЗАДАНИЕ
116
ИЗОБРАЖЕНИЕ СТАНДАРТНЫХ
ГРАФИЧЕСКИХ ОБЪЕКТОВ БЛОК-СХЕМ
В ПРОГРАММЕ WORD
Цель работы: построить простейшие блок-схемы с примене нием эле -
мен тов текстового редактора Word.
Как вам известно, в программе Word инструменты для создания изобра -
же ний располагаются на панели Рисование (Draw).
Для создания графических элементов зачастую пользуются готовыми Ав то -
фигурами (AutoShapes), находящимися на панели инструментов Рисование
(Draw). Стандартные элементы блок-схем приведе ны в соответствующем
пункте ее меню – Блок-схема (Flowchart).
Чтобы найти требуемую фигуру для блок-схемы, нужно:
1. Выбрать команду Автофигуры (AutoShapes) ⇒ Блок-схема (Flowchart)
на панели инструментов Рисование (Draw).
2. В открывшемся меню щелкнуть левой кнопкой мыши на нужной фигуре.
3. Удерживая левую кнопку мыши, увеличить фигуру на рабочем поле
до необходимого размера, а затем отпустить кнопку.
4. Чтобы переместить выделенную (то есть маркированную по краю)
фи гуру, надо, щелкнув на ней левой кнопкой мыши и удерживая ее,
перетащить фигуру на нужное место.
Практическая работа №3.
1177. ПРАКТИКУМ
5. Чтобы поместить текст внутрь фигуры, надо щелкнуть на ней правой
кнопкой мыши и, выбрав в открывшемся меню строку Добавить текст (Add
text), ввести нужный текст.
Чтобы связать воедино фигуры и соединяющие их отрезки, надо, используя
инструмент Выбор объектов (Select Objects) на панели инстру мен тов
Рисование (Draw), выделить нужные объекты и, щелкнув на рисунке
правой кнопкой мыши, выбрать в открывшемся контекстном меню команду
Группировка 
Группировка (Groping) ⇒ Группировать (Group)
В результате объект, состоящий из отдельных блоков, превратится в еди ный
графический объект, и тогда над ним можно будет совершать любые опе рации,
применимые к графическим объектам.
Используя графические объекты панели Рисование (Draw), составьте
блок-схему алгоритма для нахождения суммы
1 + 2 + …+ N
где N - натуральное число.
ЗАДАНИЕ
118
ОЗНАКОМЛЕНИЕ С ПРОГРАММОЙ 
INTERNET EXPLORER
Цель работы: научиться настраивать браузер Internet Explorer и про смат -
ри вать с его помощью веб-страницы.
Чтобы запустить программу Internet Explorer, сделайте двойной щел чок
по ее иконке на Рабочем столе. На экране откроется окно Internet Explorer:
Адрес веб-страницы вводится в адресную строку. Наберите в адресной
строке www.wikipedia.org и нажмите кнопку . В рабочем поле окна от -
кроется главная страница сайта.
панель инструментов
адресная строка
строка меню
Практическая работа №4.
1197. ПРАКТИКУМ
120
Если при наведении курсора мыши на слово или предложение он
принимает форму руки , это означает, что щелкнув на этом слове или
предложении, можно перейти на другую страницу.
Для того чтобы сохранить открытую веб-страницу в памяти компьютера,
нужно выбрать в строке меню команду  
Файл (File) ⇒ Сохранить как (Save as)
В качестве домашней страницы Internet Explorer вы может выбрать
любую страницу (в том числе пустую).
Это делается так:
Введите в адресную строку адрес нужной страницы. Например, 
www.wikipedia.org
Выберите команду 
Сервис (Tools) ⇒ Свойства обозревателя (Internet Options). 
В открывшемся диалоговом окне перейдите на вкладку 
Общие (General) и щелкните на кнопке С текущей (Use Current).
2
1
1217. ПРАКТИКУМ
Щелкните на кнопке ОК и закройте окно
Если вы хотите установить в качестве домашней пустую страницу,
то выбрав команду
Сервис (Tools) ⇒ Свойства обозревателя (Internet (Options) 
и перейдя на вкладку Общие (General), щелкните на кнопке С пустой (Use
blank), а затем на кнопке ОК.
При помощи браузера Internet Explorer посетите следующие сайты:
www.president.az
www.edu.gov.az
www.tgdk.gov.az
www.ikt.az
www.baku.ru
Переходите по гиперссылкам с уже открытых страниц на другие.
ЗАДАНИЕ
3
122
Поиск информации в Интернете
Цель работы: поиск в Интернете нужных документов и файлов с помо -
щью различных поисковых систем
Запустите программу Internet Explorer. Введите в адресную строку адрес
поисковой системы, например 
www.google.az. 
В открывшемся окне поисковой системы Google введите в пустую строч -
ку (поле поиска) запрос – например, “заповедники Азербайджана” – и щел -
кни те на кнопке Поиск (Search). Во вновь открывшемся окне будут показаны
результаты поиска.
Как видите, по данному запросу было обнаружено около 54 800 доку -
мен тов. Первые 10 из них отражены в открывшемся окне. Чтобы открыть
какую-либо из этих страниц, надо щелкнуть правой кнопкой мыши на соот -
вет ствующей гиперссылке (они отмечены синим цветом) и в открывшемся
списке выбрать Открыть в новом окне (Open in New Window). 
Практическая работа №5.
1237. ПРАКТИКУМ
124
1. При помощи поисковой системы Google соберите информацию о том
или ином городе (например, Баку, Москва, Стамбул, Вашингтон, Лон -
дон и др.).
2. Сохраните в памяти компьютера наиболее интересные из найден ных
материалов.
ЗАДАНИЕ
Программа
XVIII класс
(1 час в неделю, итого 32 часа)
I. Информация (3 часа)
Информация. Данные. Знание. Основные свойства информации. Сбор,
обработка, передача, поиск и защита информации.
II. История вычислительной техники (2 часа)
История вычислительной техники. Поколения компьютеров.
III. Арифметические основы компьютера (5 часов)
Системы счисления. Позиционные системы счисления. Взаимосвязи между
системами счисления. Двоичная система счисления.
Практическая работа №1. Перевод чисел из одной системы счисления в
другую при помощи программы Калькулятор
IV. Логические основы компьютера (3 часа)
Формальная логика. Логические операции. История науки логики.
V. Программирование (11 часов)
Алгоритмический язык. Вспомогательные алгоритмы. Циклы. Условия в
алгоритмическом языке. Ветвление. Переменные величины в
алгоритмическом языке. Ввод и вывод информации. Результаты
алгоритмов и алгоритмы-функции.
Практическая работа №2. Изображение блок-схем в программе Paint.
Практическая работа №3. Изображение стандартных графических объектов
блок-схем в программе Word.
VI. Коммуникационные технологии (8 часов)
Компьютерные сети. Интернет. “Всемирная паутина”. Электронная почта.
Программа Outlook Express.
Практическая работа №4. Ознакомление с программой Internet Explorer.
Практическая работа №5. Поиск информации в Интернете.
1257. ПРАКТИКУМ
О Г Л А В Л Е Н И Е
1 | ИНФОРМАЦИЯ 
1.1. Информация. Данные. Знание . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
1.2. Прием информации. Основные свойства информации . . . . . . . 5
1.3. Сбор, обработка, передача, поиск и хранение информации  . . . . . . . 6
2 | ИСТОРИЯ ВЫЧИСЛИТЕЛЬНОЙ ТЕХНИКИ 
2.1. История вычислительной техники  . . . . . . . . . . . . . . . . . . . . . . . . 9
2.2. Поколения компьютеров . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
3 | МАТЕМАТИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА
3.1. Системы счисления . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
3.2. Позиционные системы счисления  . . . . . . . . . . . . . . . . . . . . . . . 25
3.3. Перевод чисел из одной системы счисления в другую  . . . . . . 29
3.4. Двоичная система счисления  . . . . . . . . . . . . . . . . . . . . . . . . . . .33
4 | ЛОГИЧЕСКИЕ ОСНОВЫ КОМПЬЮТЕРА 
4.1. Формальная логика  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37
4.2. Логические операции  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40
4.3. История науки логики  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47
5 | ПРОГРАММИРОВАНИЕ
5.1. Алгоритмический язык  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
5.2. Вспомогательные алгоритмы  . . . . . . . . . . . . . . . . . . . . . . . . . . . 56
5.3. Циклы  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
5.4. Условия в алгоритмическом языке. Ветвление  . . . . . . . . . . . . 67
5.5. Переменные величины в алгоритмическом языке  . . . . . . . . . . 73
5.6. Ввод и вывод информации  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77
5.7. Результаты алгоритмов и алгоритмы-функции  . . . . . . . . . . . . . 80
6 | КОММУНИКАЦИОННЫЕ ТЕХНОЛОГИИ
6.1. Компьютерные сети . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
6.2. Интернет . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
6.3. WWW  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
6.4. Электронная почта  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
6.5. Программа Outlook Express  . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
126
7 | ПРАКТИКУМ
Практическая работа №1. Перевод чисел из одной системы
счисления в другую при помощи
программы Калькулятор  . . . . . . . . . 109
Практическая работа №2. Изображение блок-схем 
в программе Paint  . . . . . . . . . . . . . . . 112
Практическая работа №3. Изображение стандартных 
графических объектов блок-схем 
в программе Word  . . . . . . . . . . . . . . . 117
Практическая работа №4. Ознакомление с программой 
Internet Explorer  . . . . . . . . . . . . . . . . 119
Практическая работа №5. Поиск информации в Интернете  . . . 123
Программа . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
1277. ПРАКТИКУМ
Исмаил Джалал оглу Садыгов
Рамин Алиназим оглу Махмудзаде
Наида Ризван гызы Исаева
Информатика – 8. Учебник для 8-го класса средней школы. 
“Bakınəşr”, “ТМ group, 2010.
Формат 70×1001/16. Бумага офсетная №1. Физ.печ.л. 8,0. 
Подписано в печать 25.05.2010. Гарнитура “Тims New Roman”. Тираж 9300.
Бесплатно.
128
